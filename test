<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>dealIIheaders.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>deal_i_iheaders_8h</filename>
  </compound>
  <compound kind="file">
    <name>EquationDependencyParser.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>_equation_dependency_parser_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="var_type_enums_8h" name="varTypeEnums.h" local="yes" imported="no">varTypeEnums.h</includes>
    <class kind="class">EquationDependencyParser</class>
  </compound>
  <compound kind="file">
    <name>fields.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>fields_8h</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">userInputParameters.h</includes>
    <class kind="class">Field</class>
  </compound>
  <compound kind="file">
    <name>FloodFiller.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>_flood_filler_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <class kind="class">GrainSet</class>
    <class kind="class">FloodFiller</class>
    <member kind="typedef">
      <type>dealii::parallel::distributed::Vector&lt; double &gt;</type>
      <name>vectorType</name>
      <anchorfile>_flood_filler_8h.html</anchorfile>
      <anchor>accab0ce4c9641071419bfea1492d190f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>initialCondition_template_instantiations.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>initial_condition__template__instantiations_8h</filename>
  </compound>
  <compound kind="file">
    <name>initialConditions.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>initial_conditions_8h</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">userInputParameters.h</includes>
    <class kind="class">InitialCondition</class>
    <class kind="class">InitialConditionVec</class>
  </compound>
  <compound kind="file">
    <name>inputFileReader.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>input_file_reader_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="variable_attribute_loader_8h" name="variableAttributeLoader.h" local="yes" imported="no">variableAttributeLoader.h</includes>
    <class kind="class">inputFileReader</class>
  </compound>
  <compound kind="file">
    <name>matrixFreePDE.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>matrix_free_p_d_e_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="var_b_cs_8h" name="varBCs.h" local="yes" imported="no">varBCs.h</includes>
    <includes id="fields_8h" name="fields.h" local="yes" imported="no">fields.h</includes>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">userInputParameters.h</includes>
    <includes id="nucleus_8h" name="nucleus.h" local="yes" imported="no">nucleus.h</includes>
    <includes id="variable_value_container_8h" name="variableValueContainer.h" local="yes" imported="no">variableValueContainer.h</includes>
    <includes id="variable_container_8h" name="variableContainer.h" local="yes" imported="no">variableContainer.h</includes>
    <includes id="_equation_dependency_parser_8h" name="EquationDependencyParser.h" local="yes" imported="no">EquationDependencyParser.h</includes>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">SimplifiedGrainRepresentation.h</includes>
    <class kind="class">MatrixFreePDE</class>
    <member kind="define">
      <type>#define</type>
      <name>constV</name>
      <anchorfile>matrix_free_p_d_e_8h.html</anchorfile>
      <anchor>af4deabb57f7353cd1981dbbb926455cd</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="typedef">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarType</name>
      <anchorfile>matrix_free_p_d_e_8h.html</anchorfile>
      <anchor>a0af7e68c8d9f5eaef75b5f5060a5350b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::parallel::distributed::Vector&lt; double &gt;</type>
      <name>vectorType</name>
      <anchorfile>matrix_free_p_d_e_8h.html</anchorfile>
      <anchor>accab0ce4c9641071419bfea1492d190f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>matrixFreePDE_template_instantiations.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>matrix_free_p_d_e__template__instantiations_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MATRIXFREEPDE_TEMPLATE_INSTANTIATION</name>
      <anchorfile>matrix_free_p_d_e__template__instantiations_8h.html</anchorfile>
      <anchor>a6e74a5f497ef93a7411eb62e48c5bde6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>model_variables.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>model__variables_8h</filename>
    <class kind="class">modelVariable</class>
    <class kind="class">modelResidual</class>
    <class kind="struct">variable_info</class>
  </compound>
  <compound kind="file">
    <name>nonUniformDirichletBC.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>non_uniform_dirichlet_b_c_8h</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">userInputParameters.h</includes>
    <class kind="class">NonUniformDirichletBC</class>
    <class kind="class">NonUniformDirichletBCVec</class>
  </compound>
  <compound kind="file">
    <name>nonUniformDirichletBC_template_instantiations.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>non_uniform_dirichlet_b_c__template__instantiations_8h</filename>
  </compound>
  <compound kind="file">
    <name>nucleationParameters.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>nucleation_parameters_8h</filename>
    <class kind="class">nucleationParameters</class>
  </compound>
  <compound kind="file">
    <name>nucleus.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>nucleus_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <class kind="struct">nucleus</class>
  </compound>
  <compound kind="file">
    <name>OrderParameterRemapper.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>_order_parameter_remapper_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">SimplifiedGrainRepresentation.h</includes>
    <class kind="class">OrderParameterRemapper</class>
  </compound>
  <compound kind="file">
    <name>parallelNucleationList.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>parallel_nucleation_list_8h</filename>
    <includes id="nucleus_8h" name="nucleus.h" local="yes" imported="no">nucleus.h</includes>
    <class kind="class">parallelNucleationList</class>
  </compound>
  <compound kind="file">
    <name>postProcessedFields.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>post_processed_fields_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>postProcessedFields</name>
      <anchorfile>post_processed_fields_8h.html</anchorfile>
      <anchor>a13dd6177d13d0d68b193523dcfca87dd</anchor>
      <arglist>(const std::vector&lt; modelVariable&lt; dim &gt; &gt; &amp;modelVariablesList, std::vector&lt; modelResidual&lt; dim &gt; &gt; &amp;modelResidualsList, const dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc, const list_of_CIJ&lt; dim &gt; material_moduli)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimplifiedGrainRepresentation.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>_simplified_grain_representation_8h</filename>
    <includes id="_flood_filler_8h" name="FloodFiller.h" local="yes" imported="no">FloodFiller.h</includes>
    <class kind="class">SimplifiedGrainRepresentation</class>
    <class kind="class">SimplifiedGrainManipulator</class>
  </compound>
  <compound kind="file">
    <name>SolverParameters.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>_solver_parameters_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <class kind="class">SolverParametersBase</class>
    <class kind="class">LinearSolverParameters</class>
    <class kind="class">NonlinearSolverParameters</class>
    <member kind="enumeration">
      <type></type>
      <name>SolverToleranceType</name>
      <anchorfile>_solver_parameters_8h.html</anchorfile>
      <anchor>a97d35dcc408b10c4fb4081fec6edf2d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_RESIDUAL</name>
      <anchorfile>_solver_parameters_8h.html</anchorfile>
      <anchor>a97d35dcc408b10c4fb4081fec6edf2d9ac33ccaa690a108c740c574161d504380</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELATIVE_RESIDUAL_CHANGE</name>
      <anchorfile>_solver_parameters_8h.html</anchorfile>
      <anchor>a97d35dcc408b10c4fb4081fec6edf2d9a23716cd5e391430e0242b141242a59c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_SOLUTION_CHANGE</name>
      <anchorfile>_solver_parameters_8h.html</anchorfile>
      <anchor>a97d35dcc408b10c4fb4081fec6edf2d9af8341604dee7f0459e899fcd41274cf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sortIndexEntryPairList.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>sort_index_entry_pair_list_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="var_type_enums_8h" name="varTypeEnums.h" local="yes" imported="no">varTypeEnums.h</includes>
    <member kind="function">
      <type>std::vector&lt; bool &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8h.html</anchorfile>
      <anchor>a97284f4ed1028703f4eddb1df0e22955</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8h.html</anchorfile>
      <anchor>a07f81980123f31868b66898c5e0edc31</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, std::string default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8h.html</anchorfile>
      <anchor>a3b52418e4578991f84a88eae55f49cff</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, fieldType &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, fieldType default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PDEType &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8h.html</anchorfile>
      <anchor>afb722841a991c0f564dbde2dd4c74e12</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, PDEType &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, PDEType default_value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>typeDefs.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>type_defs_8h</filename>
    <member kind="typedef">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>a0af7e68c8d9f5eaef75b5f5060a5350b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::parallel::distributed::Vector&lt; double &gt;</type>
      <name>vectorType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>accab0ce4c9641071419bfea1492d190f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::FEEvaluation&lt; dim, degree, degree+1, 1, double &gt;</type>
      <name>typeScalar</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>aa052a27d286446c6ac73855c6eafb9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::FEEvaluation&lt; dim, degree, degree+1, dim, double &gt;</type>
      <name>typeVector</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>ab21b18a243589c5255cd4dad43f192e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarvalueType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>ac74a2c5a901e3ca87ec3ae9c01623449</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorvalueType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>a67b2dc8754f16b415d85a07e2b2fe856</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalargradType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>a35b1b83d6d194e7417b515cc381ee577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalarhessType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>a2eee5b91e58f09e00053c196b4e91f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorgradType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>a5c5c0fd24a54a16a15ac9f93b48f5fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 3, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorhessType</name>
      <anchorfile>type_defs_8h.html</anchorfile>
      <anchor>ad8666e06a1a43dedeeb94f2062d82f48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>userInputParameters.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>user_input_parameters_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="model__variables_8h" name="model_variables.h" local="yes" imported="no">model_variables.h</includes>
    <includes id="var_b_cs_8h" name="varBCs.h" local="yes" imported="no">varBCs.h</includes>
    <includes id="input_file_reader_8h" name="inputFileReader.h" local="yes" imported="no">inputFileReader.h</includes>
    <includes id="var_type_enums_8h" name="varTypeEnums.h" local="yes" imported="no">varTypeEnums.h</includes>
    <includes id="variable_attribute_loader_8h" name="variableAttributeLoader.h" local="yes" imported="no">variableAttributeLoader.h</includes>
    <includes id="nucleation_parameters_8h" name="nucleationParameters.h" local="yes" imported="no">nucleationParameters.h</includes>
    <includes id="_solver_parameters_8h" name="SolverParameters.h" local="yes" imported="no">SolverParameters.h</includes>
    <class kind="class">userInputParameters</class>
    <member kind="enumeration">
      <type></type>
      <name>elasticityModel</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISOTROPIC</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3ab8d64119450bae921ab38a21c7974ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSVERSE</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3a6ce703f9cc47a7a2c52df9d397e0c149</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ORTHOTROPIC</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3aa5620c2c840f7a0ec7fd602363ea904d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANISOTROPIC</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3a089b8e5473289e97a7194eeee4c67d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANISOTROPIC2D</name>
      <anchorfile>user_input_parameters_8h.html</anchorfile>
      <anchor>abb3de18236e38998c9ebe938a8791ab3a0e3dabaec38f25fa3b2d6e832c361335</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>userInputParameters_template_instantiations.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>user_input_parameters__template__instantiations_8h</filename>
  </compound>
  <compound kind="file">
    <name>varBCs.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>var_b_cs_8h</filename>
    <class kind="class">varBCs</class>
    <member kind="enumeration">
      <type></type>
      <name>BC_type</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NATURAL</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74a0425aaf673bebee34014367ea7c3deb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRICHLET</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74a1c2adefa6a3b7015b29913c49ee050c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PERIODIC</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74ae4379d044711537d9ce3b3b58c575c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_UNIFORM_DIRICHLET</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74af4663ddb6e820e210c4d046fbe1e2e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEUMANN</name>
      <anchorfile>var_b_cs_8h.html</anchorfile>
      <anchor>a1b857ce330597f3389336178f05a6b74ae58d114453737f3084aa5c645eba3412</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variableAttributeLoader.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>variable_attribute_loader_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">dealIIheaders.h</includes>
    <includes id="model__variables_8h" name="model_variables.h" local="yes" imported="no">model_variables.h</includes>
    <includes id="var_type_enums_8h" name="varTypeEnums.h" local="yes" imported="no">varTypeEnums.h</includes>
    <includes id="_equation_dependency_parser_8h" name="EquationDependencyParser.h" local="yes" imported="no">EquationDependencyParser.h</includes>
    <class kind="class">variableAttributeLoader</class>
  </compound>
  <compound kind="file">
    <name>variableContainer.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>variable_container_8h</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">userInputParameters.h</includes>
    <includes id="type_defs_8h" name="typeDefs.h" local="yes" imported="no">typeDefs.h</includes>
    <class kind="class">variableContainer</class>
  </compound>
  <compound kind="file">
    <name>variableValueContainer.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>variable_value_container_8h</filename>
    <class kind="class">variableValueContainer</class>
  </compound>
  <compound kind="file">
    <name>varTypeEnums.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>var_type_enums_8h</filename>
    <member kind="enumeration">
      <type></type>
      <name>fieldType</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>ae2c3e99c22ce037f68e9b19bfd9c6de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCALAR</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>ae2c3e99c22ce037f68e9b19bfd9c6de2a7efbb6cac96595e63e8fa171bde1eb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>ae2c3e99c22ce037f68e9b19bfd9c6de2a1a85ef13eaa80e8561743892f9dba958</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDEType</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>a12521d5d4cf2d9ed3c05e52b162fad42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPLICIT_TIME_DEPENDENT</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>a12521d5d4cf2d9ed3c05e52b162fad42ad2de71eecbf16bf515fd3c59269e6a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLICIT_TIME_DEPENDENT</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>a12521d5d4cf2d9ed3c05e52b162fad42a4b16f6e3616089013bf31269ba6e5a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_INDEPENDENT</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>a12521d5d4cf2d9ed3c05e52b162fad42aab6e019f91a8080c21c724ca86adfb7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUXILIARY</name>
      <anchorfile>var_type_enums_8h.html</anchorfile>
      <anchor>a12521d5d4cf2d9ed3c05e52b162fad42ad8c41b821c9168004fb20ef0f236dcce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vectorBCFunction.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>vector_b_c_function_8h</filename>
    <class kind="class">vectorBCFunction</class>
  </compound>
  <compound kind="file">
    <name>vectorLoad.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/include/</path>
    <filename>vector_load_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>vectorLoad</name>
      <anchorfile>vector_load_8h.html</anchorfile>
      <anchor>aa856b76c49909c7a0b685282722c9c68</anchor>
      <arglist>(bool in[], int array_size, std::vector&lt; bool &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorLoad</name>
      <anchorfile>vector_load_8h.html</anchorfile>
      <anchor>a484a60ce3b3fc4cb6ec47fde53f70245</anchor>
      <arglist>(double in[], int array_size, std::vector&lt; double &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorLoad</name>
      <anchorfile>vector_load_8h.html</anchorfile>
      <anchor>a1368c277d2ad82790d754267611d8e50</anchor>
      <arglist>(int in[], int array_size, std::vector&lt; int &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorLoad</name>
      <anchorfile>vector_load_8h.html</anchorfile>
      <anchor>a959690f14c5771399bb54033c1b951b2</anchor>
      <arglist>(unsigned int in[], int array_size, std::vector&lt; unsigned int &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorLoad</name>
      <anchorfile>vector_load_8h.html</anchorfile>
      <anchor>ae9b6cd9262d4e7299b904585fe5fe016</anchor>
      <arglist>(std::string in[], int array_size, std::vector&lt; std::string &gt; &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/</path>
    <filename>_r_e_a_d_m_e_8md</filename>
  </compound>
  <compound kind="file">
    <name>EquationDependencyParser.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/EquationDependencyParser/</path>
    <filename>_equation_dependency_parser_8cc</filename>
    <includes id="_equation_dependency_parser_8h" name="EquationDependencyParser.h" local="yes" imported="no">../../include/EquationDependencyParser.h</includes>
  </compound>
  <compound kind="file">
    <name>FloodFiller.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/FloodFiller/</path>
    <filename>_flood_filler_8cc</filename>
    <includes id="_flood_filler_8h" name="FloodFiller.h" local="yes" imported="no">../../include/FloodFiller.h</includes>
  </compound>
  <compound kind="file">
    <name>inputFileReader.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/inputFileReader/</path>
    <filename>input_file_reader_8cc</filename>
    <includes id="input_file_reader_8h" name="inputFileReader.h" local="yes" imported="no">../../include/inputFileReader.h</includes>
    <includes id="sort_index_entry_pair_list_8h" name="sortIndexEntryPairList.h" local="yes" imported="no">../../include/sortIndexEntryPairList.h</includes>
    <includes id="_equation_dependency_parser_8h" name="EquationDependencyParser.h" local="yes" imported="no">../../include/EquationDependencyParser.h</includes>
  </compound>
  <compound kind="file">
    <name>boundaryConditions.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>src_2matrixfree_2boundary_conditions_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="vector_b_c_function_8h" name="vectorBCFunction.h" local="yes" imported="no">../../include/vectorBCFunction.h</includes>
    <includes id="non_uniform_dirichlet_b_c_8h" name="nonUniformDirichletBC.h" local="yes" imported="no">../../include/nonUniformDirichletBC.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>boundaryConditions.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>tests_2unit__tests_2boundary_conditions_8cc</filename>
  </compound>
  <compound kind="file">
    <name>buildFields.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>build_fields_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>checkpoint.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>checkpoint_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>computeIntegral.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>compute_integral_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>computeLHS.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>compute_l_h_s_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>computeRHS.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>compute_r_h_s_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="variable_container_8h" name="variableContainer.h" local="yes" imported="no">../../include/variableContainer.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>init.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>init_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>initForTests.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>init_for_tests_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>initialConditions.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>src_2matrixfree_2initial_conditions_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="initial_conditions_8h" name="initialConditions.h" local="yes" imported="no">../../include/initialConditions.h</includes>
    <includes id="_order_parameter_remapper_8h" name="OrderParameterRemapper.h" local="yes" imported="no">../../include/OrderParameterRemapper.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
    <class kind="class">InitialConditionPField</class>
  </compound>
  <compound kind="file">
    <name>initialConditions.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>tests_2unit__tests_2initial_conditions_8cc</filename>
  </compound>
  <compound kind="file">
    <name>invM.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>inv_m_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>markBoundaries.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>mark_boundaries_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="initial_conditions_8h" name="initialConditions.h" local="yes" imported="no">../../include/initialConditions.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>matrixFreePDE.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>matrix_free_p_d_e_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>nucleation.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>nucleation_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="parallel_nucleation_list_8h" name="parallelNucleationList.h" local="yes" imported="no">../../include/parallelNucleationList.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>outputResults.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>output_results_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>postprocessor.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>postprocessor_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>reassignGrains.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>reassign_grains_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="_flood_filler_8h" name="FloodFiller.h" local="yes" imported="no">../../include/FloodFiller.h</includes>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">../../include/SimplifiedGrainRepresentation.h</includes>
    <includes id="_order_parameter_remapper_8h" name="OrderParameterRemapper.h" local="yes" imported="no">../../include/OrderParameterRemapper.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>refine.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>refine_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>reinit.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>reinit_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>setNonlinearEqInitialGuess.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>set_nonlinear_eq_initial_guess_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>solve.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>solve_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>solveIncrement.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>solve_increment_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>utilities.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/matrixfree/</path>
    <filename>utilities_8cc</filename>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="matrix_free_p_d_e__template__instantiations_8h" name="matrixFreePDE_template_instantiations.h" local="yes" imported="no">../../include/matrixFreePDE_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>computeStress.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/models/mechanics/</path>
    <filename>compute_stress_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>compute_stress_8h.html</anchorfile>
      <anchor>ab938d662f133ebe02cafc8b6716f5f0a</anchor>
      <arglist>(const dealii::Table&lt; 2, double &gt; &amp;CIJ, const dealii::VectorizedArray&lt; double &gt; strain[][dim], dealii::VectorizedArray&lt; double &gt; R[][dim])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>compute_stress_8h.html</anchorfile>
      <anchor>ae655ed004d95469fdbbcd79f3b8d09bb</anchor>
      <arglist>(const dealii::VectorizedArray&lt; double &gt; CIJ[2 *dim-1+dim/3][2 *dim-1+dim/3], const dealii::VectorizedArray&lt; double &gt; strain[][dim], dealii::VectorizedArray&lt; double &gt; R[][dim])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>compute_stress_8h.html</anchorfile>
      <anchor>a5321bf7824afa1fb14c73136a3cbe79d</anchor>
      <arglist>(const dealii::Tensor&lt; 2, 2 *dim-1+dim/3, dealii::VectorizedArray&lt; double &gt; &gt; &amp;CIJ, const dealii::VectorizedArray&lt; double &gt; strain[][dim], dealii::VectorizedArray&lt; double &gt; R[][dim])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>compute_stress_8h.html</anchorfile>
      <anchor>a3473592575a430b8dbf2956bc9b0fa6f</anchor>
      <arglist>(const dealii::Tensor&lt; 2, 2 *dim-1+dim/3, dealii::VectorizedArray&lt; double &gt; &gt; &amp;CIJ, const dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt; strain, dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>compute_stress_8h.html</anchorfile>
      <anchor>a8ee312d51916aa6d0be46e5d7cb6a57f</anchor>
      <arglist>(const dealii::Table&lt; 2, double &gt; &amp;CIJ, const dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt; &amp;strain, dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt; &amp;R)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OrderParameterRemapper.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/OrderParameterRemapper/</path>
    <filename>_order_parameter_remapper_8cc</filename>
    <includes id="_order_parameter_remapper_8h" name="OrderParameterRemapper.h" local="yes" imported="no">../../include/OrderParameterRemapper.h</includes>
  </compound>
  <compound kind="file">
    <name>parallelNucleationList.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/parallelNucleationList/</path>
    <filename>parallel_nucleation_list_8cc</filename>
    <includes id="parallel_nucleation_list_8h" name="parallelNucleationList.h" local="yes" imported="no">../../include/parallelNucleationList.h</includes>
    <includes id="nucleus_8h" name="nucleus.h" local="yes" imported="no">../../include/nucleus.h</includes>
  </compound>
  <compound kind="file">
    <name>pFunction.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/pFunction/</path>
    <filename>p_function_8h</filename>
    <class kind="class">PFunctions::pFunction</class>
    <namespace>PFunctions</namespace>
  </compound>
  <compound kind="file">
    <name>SimplifiedGrainRepresentation.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/SimplifiedGrainRepresentation/</path>
    <filename>_simplified_grain_representation_8cc</filename>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">../../include/SimplifiedGrainRepresentation.h</includes>
  </compound>
  <compound kind="file">
    <name>SolverParameters.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/SolverParameters/</path>
    <filename>_solver_parameters_8cc</filename>
    <includes id="_solver_parameters_8h" name="SolverParameters.h" local="yes" imported="no">../../include/SolverParameters.h</includes>
  </compound>
  <compound kind="file">
    <name>load_BC_list.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/userInputParameters/</path>
    <filename>load___b_c__list_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="user_input_parameters__template__instantiations_8h" name="userInputParameters_template_instantiations.h" local="yes" imported="no">../../include/userInputParameters_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>load_user_constants.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/userInputParameters/</path>
    <filename>load__user__constants_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="user_input_parameters__template__instantiations_8h" name="userInputParameters_template_instantiations.h" local="yes" imported="no">../../include/userInputParameters_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>loadVariableAttributes.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/userInputParameters/</path>
    <filename>load_variable_attributes_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="_equation_dependency_parser_8h" name="EquationDependencyParser.h" local="yes" imported="no">../../include/EquationDependencyParser.h</includes>
    <includes id="user_input_parameters__template__instantiations_8h" name="userInputParameters_template_instantiations.h" local="yes" imported="no">../../include/userInputParameters_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>setTimeStepList.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/userInputParameters/</path>
    <filename>set_time_step_list_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="user_input_parameters__template__instantiations_8h" name="userInputParameters_template_instantiations.h" local="yes" imported="no">../../include/userInputParameters_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>userInputParameters.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/userInputParameters/</path>
    <filename>user_input_parameters_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="user_input_parameters__template__instantiations_8h" name="userInputParameters_template_instantiations.h" local="yes" imported="no">../../include/userInputParameters_template_instantiations.h</includes>
  </compound>
  <compound kind="file">
    <name>sortIndexEntryPairList.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/utilities/</path>
    <filename>sort_index_entry_pair_list_8cc</filename>
    <includes id="sort_index_entry_pair_list_8h" name="sortIndexEntryPairList.h" local="yes" imported="no">../../include/sortIndexEntryPairList.h</includes>
    <member kind="function">
      <type>std::vector&lt; bool &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8cc.html</anchorfile>
      <anchor>a97284f4ed1028703f4eddb1df0e22955</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8cc.html</anchorfile>
      <anchor>a07f81980123f31868b66898c5e0edc31</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, std::string default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8cc.html</anchorfile>
      <anchor>a3b52418e4578991f84a88eae55f49cff</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, fieldType &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, fieldType default_value)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PDEType &gt;</type>
      <name>sortIndexEntryPairList</name>
      <anchorfile>sort_index_entry_pair_list_8cc.html</anchorfile>
      <anchor>afb722841a991c0f564dbde2dd4c74e12</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; unsigned int, PDEType &gt; &gt; unsorted_pair_list, unsigned int number_of_variables, PDEType default_value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vectorBCFunction.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/utilities/</path>
    <filename>vector_b_c_function_8cc</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">../../include/dealIIheaders.h</includes>
    <includes id="vector_b_c_function_8h" name="vectorBCFunction.h" local="yes" imported="no">../../include/vectorBCFunction.h</includes>
  </compound>
  <compound kind="file">
    <name>variableAttributeLoader.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/variableAttributeLoader/</path>
    <filename>variable_attribute_loader_8cc</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">../../include/dealIIheaders.h</includes>
    <includes id="variable_attribute_loader_8h" name="variableAttributeLoader.h" local="yes" imported="no">../../include/variableAttributeLoader.h</includes>
    <includes id="sort_index_entry_pair_list_8h" name="sortIndexEntryPairList.h" local="yes" imported="no">../../include/sortIndexEntryPairList.h</includes>
  </compound>
  <compound kind="file">
    <name>variableContainer.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/src/variableContainer/</path>
    <filename>variable_container_8cc</filename>
    <includes id="variable_container_8h" name="variableContainer.h" local="yes" imported="no">../../include/variableContainer.h</includes>
  </compound>
  <compound kind="file">
    <name>run_automatic_tests.py</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/automatic_tests/</path>
    <filename>run__automatic__tests_8py</filename>
  </compound>
  <compound kind="file">
    <name>main.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>main_8cc</filename>
    <includes id="unit_test_8h" name="unitTest.h" local="yes" imported="no">unitTest.h</includes>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <includes id="user_input_parameters_8cc" name="userInputParameters.cc" local="yes" imported="no">../../src/userInputParameters/userInputParameters.cc</includes>
    <includes id="vector_b_c_function_8h" name="vectorBCFunction.h" local="yes" imported="no">../../include/vectorBCFunction.h</includes>
    <includes id="vector_b_c_function_8cc" name="vectorBCFunction.cc" local="yes" imported="no">../../src/utilities/vectorBCFunction.cc</includes>
    <includes id="initial_conditions_8h" name="initialConditions.h" local="yes" imported="no">../../include/initialConditions.h</includes>
    <includes id="tests_2unit__tests_2initial_conditions_8cc" name="initialConditions.cc" local="yes" imported="no">initialConditions.cc</includes>
    <includes id="tests_2unit__tests_2boundary_conditions_8cc" name="boundaryConditions.cc" local="yes" imported="no">boundaryConditions.cc</includes>
    <includes id="unit__test__inputs_8cc" name="unit_test_inputs.cc" local="yes" imported="no">unit_test_inputs.cc</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cc.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>postprocess.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>postprocess_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>postProcessedFields</name>
      <anchorfile>postprocess_8h.html</anchorfile>
      <anchor>a13dd6177d13d0d68b193523dcfca87dd</anchor>
      <arglist>(const std::vector&lt; modelVariable&lt; dim &gt; &gt; &amp;modelVariablesList, std::vector&lt; modelResidual&lt; dim &gt; &gt; &amp;modelResidualsList, const dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc, const list_of_CIJ&lt; dim &gt; material_moduli)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>postProcessedFields&lt; 2 &gt;</name>
      <anchorfile>postprocess_8h.html</anchorfile>
      <anchor>a0d9bd5cc0ed4110f93a7161e4f4c3f63</anchor>
      <arglist>(const std::vector&lt; modelVariable&lt; 2 &gt; &gt; &amp;modelVariablesList, std::vector&lt; modelResidual&lt; 2 &gt; &gt; &amp;modelResidualsList, const dealii::Point&lt; 2, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc, const list_of_CIJ&lt; 2 &gt; material_moduli)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>postProcessedFields&lt; 3 &gt;</name>
      <anchorfile>postprocess_8h.html</anchorfile>
      <anchor>a5aa041d7c15e5088c33d83f643cc736c</anchor>
      <arglist>(const std::vector&lt; modelVariable&lt; 3 &gt; &gt; &amp;modelVariablesList, std::vector&lt; modelResidual&lt; 3 &gt; &gt; &amp;modelResidualsList, const dealii::Point&lt; 3, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc, const list_of_CIJ&lt; 3 &gt; material_moduli)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test_computeStress.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__compute_stress_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_EquationDependencyParser.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___equation_dependency_parser_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_FloodFiller.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___flood_filler_8h</filename>
    <includes id="_flood_filler_8h" name="FloodFiller.h" local="yes" imported="no">../../include/FloodFiller.h</includes>
    <class kind="class">InitialConditionFloodFill</class>
    <member kind="function">
      <type>void</type>
      <name>setExpectedVertexLists</name>
      <anchorfile>test___flood_filler_8h.html</anchorfile>
      <anchor>a05499c69cb5106ad1caaefd1b131a166</anchor>
      <arglist>(std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt;&gt;&gt; &amp;expected_vertex_list0, std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt;&gt;&gt; &amp;expected_vertex_list1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareUnsortedVectors</name>
      <anchorfile>test___flood_filler_8h.html</anchorfile>
      <anchor>a6c8f1262eb9b590faa17c0f5f3466d70</anchor>
      <arglist>(std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt;&gt;&gt; vec1, std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt;&gt;&gt; vec2, double tolerance)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test_get_entry_name_ending_list.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__get__entry__name__ending__list_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_get_subsection_entry_list.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__get__subsection__entry__list_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_invM.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__inv_m_8h</filename>
    <class kind="class">testInvM</class>
  </compound>
  <compound kind="file">
    <name>test_LinearSolverParameters.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___linear_solver_parameters_8h</filename>
    <includes id="_solver_parameters_8h" name="SolverParameters.h" local="yes" imported="no">../../include/SolverParameters.h</includes>
  </compound>
  <compound kind="file">
    <name>test_load_BC_list.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__load___b_c__list_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_NonlinearSolverParameters.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___nonlinear_solver_parameters_8h</filename>
    <includes id="_solver_parameters_8h" name="SolverParameters.h" local="yes" imported="no">../../include/SolverParameters.h</includes>
  </compound>
  <compound kind="file">
    <name>test_OrderParameterRemapper.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___order_parameter_remapper_8h</filename>
    <includes id="_order_parameter_remapper_8h" name="OrderParameterRemapper.h" local="yes" imported="no">../../include/OrderParameterRemapper.h</includes>
    <class kind="class">InitialConditionOrderParameterRemapper</class>
  </compound>
  <compound kind="file">
    <name>test_outputResults.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__output_results_8h</filename>
    <class kind="class">testOutputResults</class>
  </compound>
  <compound kind="file">
    <name>test_parse_line.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__parse__line_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_setOutputTimeSteps.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__set_output_time_steps_8h</filename>
  </compound>
  <compound kind="file">
    <name>test_setRigidBodyModeConstraints.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test__set_rigid_body_mode_constraints_8h</filename>
    <class kind="class">setRigidBodyModeConstraintsTest</class>
  </compound>
  <compound kind="file">
    <name>test_SimplifiedGrainManipulator.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___simplified_grain_manipulator_8h</filename>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">../../include/SimplifiedGrainRepresentation.h</includes>
  </compound>
  <compound kind="file">
    <name>test_SimplifiedGrainRepresentation.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>test___simplified_grain_representation_8h</filename>
    <includes id="_simplified_grain_representation_8h" name="SimplifiedGrainRepresentation.h" local="yes" imported="no">../../include/SimplifiedGrainRepresentation.h</includes>
  </compound>
  <compound kind="file">
    <name>unit_test_inputs.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>unit__test__inputs_8cc</filename>
    <includes id="user_input_parameters_8h" name="userInputParameters.h" local="yes" imported="no">../../include/userInputParameters.h</includes>
    <member kind="function">
      <type>void</type>
      <name>load_unit_test_inputs</name>
      <anchorfile>unit__test__inputs_8cc.html</anchorfile>
      <anchor>acde30e9a3638e37b1e7d5f5f090104dc</anchor>
      <arglist>(userInputParameters&lt; dim &gt; &amp;userInputs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unitTest.h</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>unit_test_8h</filename>
    <includes id="deal_i_iheaders_8h" name="dealIIheaders.h" local="yes" imported="no">../../include/dealIIheaders.h</includes>
    <includes id="matrix_free_p_d_e_8h" name="matrixFreePDE.h" local="yes" imported="no">../../include/matrixFreePDE.h</includes>
    <includes id="parallel_nucleation_list_8h" name="parallelNucleationList.h" local="yes" imported="no">../../include/parallelNucleationList.h</includes>
    <includes id="matrix_free_p_d_e_8cc" name="matrixFreePDE.cc" local="yes" imported="no">../../src/matrixfree/matrixFreePDE.cc</includes>
    <includes id="init_8cc" name="init.cc" local="yes" imported="no">../../src/matrixfree/init.cc</includes>
    <includes id="reinit_8cc" name="reinit.cc" local="yes" imported="no">../../src/matrixfree/reinit.cc</includes>
    <includes id="init_for_tests_8cc" name="initForTests.cc" local="yes" imported="no">../../src/matrixfree/initForTests.cc</includes>
    <includes id="refine_8cc" name="refine.cc" local="yes" imported="no">../../src/matrixfree/refine.cc</includes>
    <includes id="inv_m_8cc" name="invM.cc" local="yes" imported="no">../../src/matrixfree/invM.cc</includes>
    <includes id="compute_l_h_s_8cc" name="computeLHS.cc" local="yes" imported="no">../../src/matrixfree/computeLHS.cc</includes>
    <includes id="compute_r_h_s_8cc" name="computeRHS.cc" local="yes" imported="no">../../src/matrixfree/computeRHS.cc</includes>
    <includes id="solve_8cc" name="solve.cc" local="yes" imported="no">../../src/matrixfree/solve.cc</includes>
    <includes id="solve_increment_8cc" name="solveIncrement.cc" local="yes" imported="no">../../src/matrixfree/solveIncrement.cc</includes>
    <includes id="output_results_8cc" name="outputResults.cc" local="yes" imported="no">../../src/matrixfree/outputResults.cc</includes>
    <includes id="mark_boundaries_8cc" name="markBoundaries.cc" local="yes" imported="no">../../src/matrixfree/markBoundaries.cc</includes>
    <includes id="src_2matrixfree_2boundary_conditions_8cc" name="boundaryConditions.cc" local="yes" imported="no">../../src/matrixfree/boundaryConditions.cc</includes>
    <includes id="src_2matrixfree_2initial_conditions_8cc" name="initialConditions.cc" local="yes" imported="no">../../src/matrixfree/initialConditions.cc</includes>
    <includes id="utilities_8cc" name="utilities.cc" local="yes" imported="no">../../src/matrixfree/utilities.cc</includes>
    <includes id="compute_integral_8cc" name="computeIntegral.cc" local="yes" imported="no">../../src/matrixfree/computeIntegral.cc</includes>
    <includes id="nucleation_8cc" name="nucleation.cc" local="yes" imported="no">../../src/matrixfree/nucleation.cc</includes>
    <includes id="checkpoint_8cc" name="checkpoint.cc" local="yes" imported="no">../../src/matrixfree/checkpoint.cc</includes>
    <includes id="set_nonlinear_eq_initial_guess_8cc" name="setNonlinearEqInitialGuess.cc" local="yes" imported="no">../../src/matrixfree/setNonlinearEqInitialGuess.cc</includes>
    <includes id="input_file_reader_8cc" name="inputFileReader.cc" local="yes" imported="no">../../src/inputFileReader/inputFileReader.cc</includes>
    <includes id="parallel_nucleation_list_8cc" name="parallelNucleationList.cc" local="yes" imported="no">../../src/parallelNucleationList/parallelNucleationList.cc</includes>
    <includes id="compute_stress_8h" name="computeStress.h" local="yes" imported="no">../../src/models/mechanics/computeStress.h</includes>
    <includes id="postprocessor_8cc" name="postprocessor.cc" local="yes" imported="no">../../src/matrixfree/postprocessor.cc</includes>
    <includes id="sort_index_entry_pair_list_8cc" name="sortIndexEntryPairList.cc" local="yes" imported="no">../../src/utilities/sortIndexEntryPairList.cc</includes>
    <includes id="variable_container_8cc" name="variableContainer.cc" local="yes" imported="no">../../src/variableContainer/variableContainer.cc</includes>
    <includes id="load___b_c__list_8cc" name="load_BC_list.cc" local="yes" imported="no">../../src/userInputParameters/load_BC_list.cc</includes>
    <includes id="load__user__constants_8cc" name="load_user_constants.cc" local="yes" imported="no">../../src/userInputParameters/load_user_constants.cc</includes>
    <includes id="load_variable_attributes_8cc" name="loadVariableAttributes.cc" local="yes" imported="no">../../src/userInputParameters/loadVariableAttributes.cc</includes>
    <includes id="set_time_step_list_8cc" name="setTimeStepList.cc" local="yes" imported="no">../../src/userInputParameters/setTimeStepList.cc</includes>
    <includes id="variable_attribute_loader_8cc" name="variableAttributeLoader.cc" local="yes" imported="no">../../src/variableAttributeLoader/variableAttributeLoader.cc</includes>
    <includes id="_flood_filler_8cc" name="FloodFiller.cc" local="yes" imported="no">../../src/FloodFiller/FloodFiller.cc</includes>
    <includes id="_simplified_grain_representation_8cc" name="SimplifiedGrainRepresentation.cc" local="yes" imported="no">../../src/SimplifiedGrainRepresentation/SimplifiedGrainRepresentation.cc</includes>
    <includes id="_order_parameter_remapper_8cc" name="OrderParameterRemapper.cc" local="yes" imported="no">../../src/OrderParameterRemapper/OrderParameterRemapper.cc</includes>
    <includes id="variable_attribute_loader__test_8cc" name="variableAttributeLoader_test.cc" local="yes" imported="no">variableAttributeLoader_test.cc</includes>
    <includes id="test__inv_m_8h" name="test_invM.h" local="yes" imported="no">test_invM.h</includes>
    <includes id="test__output_results_8h" name="test_outputResults.h" local="yes" imported="no">test_outputResults.h</includes>
    <includes id="test__compute_stress_8h" name="test_computeStress.h" local="yes" imported="no">test_computeStress.h</includes>
    <includes id="test__set_output_time_steps_8h" name="test_setOutputTimeSteps.h" local="yes" imported="no">test_setOutputTimeSteps.h</includes>
    <includes id="test__set_rigid_body_mode_constraints_8h" name="test_setRigidBodyModeConstraints.h" local="yes" imported="no">test_setRigidBodyModeConstraints.h</includes>
    <includes id="test__parse__line_8h" name="test_parse_line.h" local="yes" imported="no">test_parse_line.h</includes>
    <includes id="test__get__subsection__entry__list_8h" name="test_get_subsection_entry_list.h" local="yes" imported="no">test_get_subsection_entry_list.h</includes>
    <includes id="test__get__entry__name__ending__list_8h" name="test_get_entry_name_ending_list.h" local="yes" imported="no">test_get_entry_name_ending_list.h</includes>
    <includes id="test__load___b_c__list_8h" name="test_load_BC_list.h" local="yes" imported="no">test_load_BC_list.h</includes>
    <includes id="_solver_parameters_8h" name="SolverParameters.h" local="yes" imported="no">../../include/SolverParameters.h</includes>
    <includes id="_solver_parameters_8cc" name="SolverParameters.cc" local="yes" imported="no">../../src/SolverParameters/SolverParameters.cc</includes>
    <includes id="test___linear_solver_parameters_8h" name="test_LinearSolverParameters.h" local="yes" imported="no">test_LinearSolverParameters.h</includes>
    <includes id="test___nonlinear_solver_parameters_8h" name="test_NonlinearSolverParameters.h" local="yes" imported="no">test_NonlinearSolverParameters.h</includes>
    <includes id="_equation_dependency_parser_8cc" name="EquationDependencyParser.cc" local="yes" imported="no">../../src/EquationDependencyParser/EquationDependencyParser.cc</includes>
    <includes id="test___equation_dependency_parser_8h" name="test_EquationDependencyParser.h" local="yes" imported="no">test_EquationDependencyParser.h</includes>
    <includes id="test___flood_filler_8h" name="test_FloodFiller.h" local="yes" imported="no">test_FloodFiller.h</includes>
    <includes id="test___simplified_grain_representation_8h" name="test_SimplifiedGrainRepresentation.h" local="yes" imported="no">test_SimplifiedGrainRepresentation.h</includes>
    <includes id="test___simplified_grain_manipulator_8h" name="test_SimplifiedGrainManipulator.h" local="yes" imported="no">test_SimplifiedGrainManipulator.h</includes>
    <includes id="test___order_parameter_remapper_8h" name="test_OrderParameterRemapper.h" local="yes" imported="no">test_OrderParameterRemapper.h</includes>
    <class kind="class">unitTest</class>
    <member kind="function">
      <type>void</type>
      <name>computeStress</name>
      <anchorfile>unit_test_8h.html</anchorfile>
      <anchor>ac22f5aba09ebacaaa7480b57ce0b68e1</anchor>
      <arglist>(const dealii::Table&lt; 2, double &gt; &amp;CIJ, const dealii::VectorizedArray&lt; double &gt; ux[][dim], const dealii::VectorizedArray&lt; double &gt; R[][dim])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variableAttributeLoader_test.cc</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/phaseField_dev/tests/unit_tests/</path>
    <filename>variable_attribute_loader__test_8cc</filename>
  </compound>
  <compound kind="file">
    <name>app_files.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/app_files/</path>
    <filename>app__files_8md</filename>
  </compound>
  <compound kind="file">
    <name>app_structure.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/app_structure/</path>
    <filename>app__structure_8md</filename>
  </compound>
  <compound kind="file">
    <name>custom_apps.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/custom_apps/</path>
    <filename>custom__apps_8md</filename>
  </compound>
  <compound kind="file">
    <name>frontpage.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/</path>
    <filename>frontpage_8md</filename>
  </compound>
  <compound kind="file">
    <name>input_file.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/input_file/</path>
    <filename>input__file_8md</filename>
  </compound>
  <compound kind="file">
    <name>install_prereqs.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/installation/</path>
    <filename>install__prereqs_8md</filename>
  </compound>
  <compound kind="file">
    <name>install_prismspf.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/installation/</path>
    <filename>install__prismspf_8md</filename>
  </compound>
  <compound kind="file">
    <name>install_vis.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/installation/</path>
    <filename>install__vis_8md</filename>
  </compound>
  <compound kind="file">
    <name>installation.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/installation/</path>
    <filename>installation_8md</filename>
  </compound>
  <compound kind="file">
    <name>running_apps.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/running_apps/</path>
    <filename>running__apps_8md</filename>
  </compound>
  <compound kind="file">
    <name>tests.md</name>
    <path>/Users/stephendewitt/Documents/workspace/PRISMS_workspace/prismspf-manual/user_manual/tests/</path>
    <filename>tests_8md</filename>
  </compound>
  <compound kind="class">
    <name>EquationDependencyParser</name>
    <filename>class_equation_dependency_parser.html</filename>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a3d95380fec4dd2c79253937130c13201</anchor>
      <arglist>(std::vector&lt; std::string &gt; var_name, std::vector&lt; PDEType &gt; var_eq_type, std::vector&lt; std::string &gt; sorted_dependencies_value_RHS, std::vector&lt; std::string &gt; sorted_dependencies_gradient_RHS, std::vector&lt; std::string &gt; sorted_dependencies_value_LHS, std::vector&lt; std::string &gt; sorted_dependencies_gradient_LHS, std::vector&lt; bool &gt; &amp;var_nonlinear)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pp_parse</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aa694268f17bd034f0f261918a95dfc80</anchor>
      <arglist>(std::vector&lt; std::string &gt; var_name, std::vector&lt; std::string &gt; pp_var_name, std::vector&lt; std::string &gt; sorted_dependencies_value, std::vector&lt; std::string &gt; sorted_dependencies_gradient)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_explicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>af6c3b1e7f9763aa389e2631ada64d272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_explicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a696008fec16bb031a8fbab99b970879b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_hessian_explicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>af9e491457c6b0a176a9943f08a6be3bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_nonexplicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a0064d630a79540b19c815ee53a111db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_nonexplicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>ae3e449a0320843a3a498d7b0deddd7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_hessian_nonexplicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aad7f6b04c55099d1665688b5181e2915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>adccfe9daceb0538024cd339482ae4539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a1d2b3ec355643527865fd58f49e85456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_hessian_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a41d10cbe0d1663d29ca9a6f5286a9113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_change_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a3833aba7f05198afefeb3cfbe339e06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_change_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>ab4cf4bd994dcfe1e65a9fa3081495870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_hessian_change_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a93208f65e4fe41ac7059a9fb9284bfe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_residual_explicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aea887f64fe0562c19c6cf623f1e6a761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_residual_explicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aef6a449b76b0e9e877a6bd362db194e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_residual_nonexplicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a03ec43ccd74c712db3d957912da09ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_residual_nonexplicit_RHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a8de64aba18f53a017fd34d53efa956ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_residual_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aa3d200bc610043488adb38ff52d3a2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_gradient_residual_nonexplicit_LHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a0d07a698021f3af50d3aa85909bff282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_need_value</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a39a6ac3a607fa436075961220cf1b972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_need_gradient</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a2385722f23a100f2752a293aa2ecdeaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_need_hessian</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a7974975a4a7e81597aef5e961e12b2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_need_value_residual</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a8d3eaef7bb2ec63afee100c2a7517e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_need_gradient_residual</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a7e5fb44940e573c3abe06d100a49fdea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parseDependencyListRHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aa45fc0b7ae92a07520456ba68f5e3f1c</anchor>
      <arglist>(std::vector&lt; std::string &gt; var_name, std::vector&lt; PDEType &gt; var_eq_type, unsigned int var_index, std::string value_dependencies, std::string gradient_dependencies, std::vector&lt; bool &gt; &amp;need_value, std::vector&lt; bool &gt; &amp;need_gradient, std::vector&lt; bool &gt; &amp;need_hessian, bool &amp;need_value_residual, bool &amp;need_gradient_residual, bool &amp;is_nonlinear)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parseDependencyListLHS</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>aa39ae09a364562c9169cdecd1aad5e8c</anchor>
      <arglist>(std::vector&lt; std::string &gt; var_name, std::vector&lt; PDEType &gt; var_eq_type, unsigned int var_index, std::string value_dependencies, std::string gradient_dependencies, std::vector&lt; bool &gt; &amp;need_value, std::vector&lt; bool &gt; &amp;need_gradient, std::vector&lt; bool &gt; &amp;need_hessian, std::vector&lt; bool &gt; &amp;need_value_change, std::vector&lt; bool &gt; &amp;need_gradient_change, std::vector&lt; bool &gt; &amp;need_hessian_change, bool &amp;need_value_residual, bool &amp;need_gradient_residual, bool &amp;is_nonlinear)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parseDependencyListPP</name>
      <anchorfile>class_equation_dependency_parser.html</anchorfile>
      <anchor>a540d30b33d09d6595f4c71689babe106</anchor>
      <arglist>(std::vector&lt; std::string &gt; var_name, std::string value_dependencies, std::string gradient_dependencies, std::vector&lt; bool &gt; &amp;need_value, std::vector&lt; bool &gt; &amp;need_gradient, std::vector&lt; bool &gt; &amp;need_hessian, bool &amp;need_value_residual, bool &amp;need_gradient_residual)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Field</name>
    <filename>class_field.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>Field</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a449fa66c36ad3aff701a8b2ca177a646</anchor>
      <arglist>(fieldType _type, PDEType _pdetype, std::string _name)</arglist>
    </member>
    <member kind="variable">
      <type>fieldType</type>
      <name>type</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a3cb597ffaa5711aebc2062073daca25b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDEType</type>
      <name>pdetype</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a01f44b182c288ea940870d16606ab345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>index</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a589d64202487f78e3cc30dd2e04c5201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>startIndex</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>aef71a70c74162732337887d64d68b470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>numComponents</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>adec91e5767db3627605a6c0c8bdd6931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static unsigned int</type>
      <name>fieldCount</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>a3503c1e018813fc888c8ed2e130677eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static unsigned int</type>
      <name>indexCount</name>
      <anchorfile>class_field.html</anchorfile>
      <anchor>ade81ccd91403954610becc108098672c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FloodFiller</name>
    <filename>class_flood_filler.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <member kind="function">
      <type></type>
      <name>FloodFiller</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a36e227de5d3388bd4cae8fe77106bf23</anchor>
      <arglist>(dealii::FESystem&lt; dim &gt; &amp;_fe, dealii::QGaussLobatto&lt; dim &gt; _quadrature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcGrainSets</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a403d3a8f92c743da0117c25003d35af9</anchor>
      <arglist>(dealii::FESystem&lt; dim &gt; &amp;fe, dealii::DoFHandler&lt; dim &gt; &amp;dof_handler, vectorType *solution_field, double threshold_lower, double threshold_upper, unsigned int order_parameter_index, std::vector&lt; GrainSet&lt; dim &gt;&gt; &amp;grain_sets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recursiveFloodFill</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a9114fb154ad27e9ff4f4dcbfd0e94dbc</anchor>
      <arglist>(T di, T di_end, vectorType *solution_field, double threshold_lower, double threshold_upper, unsigned int &amp;grain_index, std::vector&lt; GrainSet&lt; dim &gt;&gt; &amp;grain_sets, bool &amp;grain_assigned)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createGlobalGrainSetList</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>ab9ea34d03ee7d23cce87cf21d7b38579</anchor>
      <arglist>(std::vector&lt; GrainSet&lt; dim &gt;&gt; &amp;grain_sets) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mergeSplitGrains</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a2cffe7b371b1c7766fc01f5c65b5ab9b</anchor>
      <arglist>(std::vector&lt; GrainSet&lt; dim &gt;&gt; &amp;grain_sets) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dealii::QGaussLobatto&lt; dim &gt;</type>
      <name>quadrature</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>aa6a92905de5734c6cdc808054a99b458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const unsigned int</type>
      <name>num_quad_points</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>ac8026b4faa13f10e6b0bd5e89999fd59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const unsigned int</type>
      <name>dofs_per_cell</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a6a83feab6dc55363ccd01e89d51f253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dealii::FESystem&lt; dim &gt; *</type>
      <name>fe</name>
      <anchorfile>class_flood_filler.html</anchorfile>
      <anchor>a8ced52e7aeacf1f4546dd5a988bcdafb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GrainSet</name>
    <filename>class_grain_set.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type>void</type>
      <name>setGrainIndex</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>ac17815c7748db8eaa3cc5316ee5d24af</anchor>
      <arglist>(unsigned int _grain_index)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getGrainIndex</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>ab9183795fa2b634b35d57ba45baa9686</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrderParameterIndex</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>a08920707ad8418fb098eec9848269b1a</anchor>
      <arglist>(unsigned int _order_parameter_index)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getOrderParameterIndex</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>a2ca1571e7ba78b882f7fd22db7d447bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addVertexList</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>ad2e2ac5b69d342d8c265c3133ee1fcce</anchor>
      <arglist>(std::vector&lt; dealii::Point&lt; dim &gt;&gt; _vertices)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt; &gt; &gt;</type>
      <name>getVertexList</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>abcb62f72943e9e049edd1ebe2237de7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>grain_index</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>a2192a7a6b584abc0c4594ed01da9159b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>order_parameter_index</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>a1b0c760303ef505b85f483039716cbc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; dealii::Point&lt; dim &gt; &gt; &gt;</type>
      <name>list_of_vertices</name>
      <anchorfile>class_grain_set.html</anchorfile>
      <anchor>ac1e5d2138b2df8c6c06e7ee62c192115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InitialCondition</name>
    <filename>class_initial_condition.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>InitialCondition</name>
      <anchorfile>class_initial_condition.html</anchorfile>
      <anchor>aaa40354b8b52e76d04daa0a9bc930d63</anchor>
      <arglist>(const unsigned int _index, const userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>class_initial_condition.html</anchorfile>
      <anchor>a6a1fceabbc7b046cd7c0934159009195</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, const unsigned int component=0) const </arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>index</name>
      <anchorfile>class_initial_condition.html</anchorfile>
      <anchor>ad50032c86051707cc49a8ded34ea39cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const userInputParameters&lt; dim &gt;</type>
      <name>userInputs</name>
      <anchorfile>class_initial_condition.html</anchorfile>
      <anchor>a679378dc93ff06d974a1ead4213456cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Vector&lt; double &gt;</type>
      <name>values</name>
      <anchorfile>class_initial_condition.html</anchorfile>
      <anchor>a407a445f9d0e4f15b159fa66058bef9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InitialConditionFloodFill</name>
    <filename>class_initial_condition_flood_fill.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>InitialConditionFloodFill</name>
      <anchorfile>class_initial_condition_flood_fill.html</anchorfile>
      <anchor>ac1bf11e67af05dbb1880ebaa021a41b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>class_initial_condition_flood_fill.html</anchorfile>
      <anchor>a6a1fceabbc7b046cd7c0934159009195</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, const unsigned int component=0) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InitialConditionOrderParameterRemapper</name>
    <filename>class_initial_condition_order_parameter_remapper.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>InitialConditionOrderParameterRemapper</name>
      <anchorfile>class_initial_condition_order_parameter_remapper.html</anchorfile>
      <anchor>a7041d5ec551f516902f3f081ed648548</anchor>
      <arglist>(unsigned int _index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>class_initial_condition_order_parameter_remapper.html</anchorfile>
      <anchor>a6a1fceabbc7b046cd7c0934159009195</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, const unsigned int component=0) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>index</name>
      <anchorfile>class_initial_condition_order_parameter_remapper.html</anchorfile>
      <anchor>a589d64202487f78e3cc30dd2e04c5201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InitialConditionPField</name>
    <filename>class_initial_condition_p_field.html</filename>
    <templarg>dim</templarg>
    <member kind="typedef">
      <type>PRISMS::PField&lt; double *, double, dim &gt;</type>
      <name>ScalarField</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>a757e8908937e81262ce38001e661dd1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InitialConditionPField</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>a4db053c2ae5c22d699b73057c538ff7e</anchor>
      <arglist>(const unsigned int _index, ScalarField &amp;_inputField)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>af07c55aae0a37d719b86b6471bd9422f</anchor>
      <arglist>(const Point&lt; dim &gt; &amp;p, const unsigned int component=0) const </arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>index</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>a589d64202487f78e3cc30dd2e04c5201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector&lt; double &gt;</type>
      <name>values</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>af4f7ff418a27e4086bea198d6d991b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarField &amp;</type>
      <name>inputField</name>
      <anchorfile>class_initial_condition_p_field.html</anchorfile>
      <anchor>a87debe4bb586d0c17e4ce25c9053bbd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InitialConditionVec</name>
    <filename>class_initial_condition_vec.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>InitialConditionVec</name>
      <anchorfile>class_initial_condition_vec.html</anchorfile>
      <anchor>a78ec66a3d4cb62bfccf19144f79fba04</anchor>
      <arglist>(const unsigned int _index, const userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_value</name>
      <anchorfile>class_initial_condition_vec.html</anchorfile>
      <anchor>aef3a5257533050ac16a01202b5c913c7</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, dealii::Vector&lt; double &gt; &amp;vector_IC) const </arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>index</name>
      <anchorfile>class_initial_condition_vec.html</anchorfile>
      <anchor>ad50032c86051707cc49a8ded34ea39cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const userInputParameters&lt; dim &gt;</type>
      <name>userInputs</name>
      <anchorfile>class_initial_condition_vec.html</anchorfile>
      <anchor>a679378dc93ff06d974a1ead4213456cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>inputFileReader</name>
    <filename>classinput_file_reader.html</filename>
    <member kind="function">
      <type></type>
      <name>inputFileReader</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>aa0dc67d92566fc8ce74383b7795e411c</anchor>
      <arglist>(std::string input_file_name, variableAttributeLoader variable_attributes)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_subsection_entry_list</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>ab119808af6e6120f79820c81652534d7</anchor>
      <arglist>(const std::string parameters_file_name, const std::string subsec_name, const std::string entry_name, const std::string default_entry) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_number_of_entries</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a25a2d3561e2f0c0b5c5a74df5e4370e7</anchor>
      <arglist>(const std::string parameters_file_name, const std::string keyword, const std::string entry_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_entry_name_ending_list</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a74b75996586c2fa374455ec5775f12d6</anchor>
      <arglist>(const std::string parameters_file_name, const std::string keyword, const std::string entry_name_begining) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declare_parameters</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a70afcb4fc4ec111addf19dcbf0edd939</anchor>
      <arglist>(dealii::ParameterHandler &amp;parameter_handler, const std::vector&lt; fieldType &gt; var_types, const std::vector&lt; PDEType &gt; var_eq_types, const unsigned int num_of_constants, const std::vector&lt; bool &gt;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_line</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a4c03a93f2b56f526824df5a675d9d4db</anchor>
      <arglist>(std::string line, const std::string keyword, const std::string entry_name, std::string &amp;out_string, bool expect_equals_sign) const </arglist>
    </member>
    <member kind="variable">
      <type>dealii::ParameterHandler</type>
      <name>parameter_handler</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a4e487049e1a956b87b08b36e34f54b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>var_types</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a579b58033f54db4dca06d223788ae9e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PDEType &gt;</type>
      <name>var_eq_types</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>ac357a764cafdd151188ebe36e3b5cc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_pp_vars</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>abab7158c85a25eb531fe1d49a48afb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_constants</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>afe991f633f0e4b5af6afdefa66484705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>model_constant_names</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>ae1b321182f4e1ad5963757511acc8174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>var_names</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a3d7bb6ec65539355e5bb12b4f54ade66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>number_of_dimensions</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>ae6fd40cc36c2ed24b6f3cc279888044b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>var_nucleates</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a1624de6fa42277714e354c15fc46d92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>var_nonlinear</name>
      <anchorfile>classinput_file_reader.html</anchorfile>
      <anchor>a6694949b1702fbffc6b9685bfcfdcdc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinearSolverParameters</name>
    <filename>class_linear_solver_parameters.html</filename>
    <base>SolverParametersBase</base>
    <member kind="function">
      <type>void</type>
      <name>loadParameters</name>
      <anchorfile>class_linear_solver_parameters.html</anchorfile>
      <anchor>accf28300de3ff4ed39122418a074e15c</anchor>
      <arglist>(unsigned int _var_index, SolverToleranceType _tolerance_type, double _tolerance_value, unsigned int _max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getMaxIterations</name>
      <anchorfile>class_linear_solver_parameters.html</anchorfile>
      <anchor>afdd4b11ea829f56896cf35958fe8ae79</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>max_iterations_list</name>
      <anchorfile>class_linear_solver_parameters.html</anchorfile>
      <anchor>aa87bf902f5bb63249c0a03ab6c0263b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MatrixFreePDE</name>
    <filename>class_matrix_free_p_d_e.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <member kind="function">
      <type></type>
      <name>MatrixFreePDE</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a2687789df6132f733302b9a1f0b49f8f</anchor>
      <arglist>(userInputParameters&lt; dim &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MatrixFreePDE</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a416b2bc1560114fe826f98b2eb75453f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>makeTriangulation</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aa0a35420e2bbbc1269a0cd59471ce0bb</anchor>
      <arglist>(parallel::distributed::Triangulation&lt; dim &gt; &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initForTests</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a08849e3690a503c85f7c7e1734cda157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vmult</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a344f8f169b475748bc249894177d6a2e</anchor>
      <arglist>(vectorType &amp;dst, const vectorType &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildFields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a715f4fc285eae134d92c8ef07a862a01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Field&lt; dim &gt; &gt;</type>
      <name>fields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a33510468a6769d344bc61b0f38beb61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConditionalOStream</type>
      <name>pcout</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a914f651bc9ca2e223b243695dd37ba53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reinit</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a8bf592c67d376edd20bf24a0028c9761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reassignGrains</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a2db95086063aabb453a2d1982f86b88c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>solveIncrement</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a39fc80d88e76a99b83d75d68a4371e39</anchor>
      <arglist>(bool skip_time_dependent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>outputResults</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ada15bd2ddcdcee02193cafbc4e2111d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeInvM</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a338a99198f0bae743299eec600b0936a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refineGrid</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aced905f83aaed97fde5f712b40828478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>adaptiveRefine</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a85ecead813fa420589176afebc1c3152</anchor>
      <arglist>(unsigned int _currentIncrement)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>adaptiveRefineCriterion</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>add5d3caaa759b5286f76db4fda4d0d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeExplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a029e993a7a65cc52941201fa21b16e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeNonexplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aeb330f44eb6fe457c0e9cbd4089d7fa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getLHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>afcc4fe564772a1331ffd7d603e84fc15</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, vectorType &amp;dst, const vectorType &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getLaplaceLHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af6f2176a7f66955cd5020ea17c9339e8</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, vectorType &amp;dst, const vectorType &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNonlinearEqInitialGuess</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a97d58a783d3b4465452a191b2df37edc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeLaplaceRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ab84535b89f1930c8f58c4f9e4acbe665</anchor>
      <arglist>(unsigned int fieldIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getLaplaceRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a946b4701f9363ea341b11a55e8adfe2d</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, vectorType &amp;dst, const vectorType &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getExplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a6976b28fa181c7503016c84192571ce9</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getNonexplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>abe60b2e416fc29ec98658a23cc216db4</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>residualExplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a395e1796a24dc0a24be811d49285ebf8</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>residualNonexplicitRHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ae09f9eaaa58c229fd424da165fb9654c</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>residualLHS</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a73f7a86f71003fe04d55f8b9acd58b5e</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessedFields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af48d2ca9f6a56369e960c110fa9c99be</anchor>
      <arglist>(const variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;pp_variable_list, const dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computePostProcessedFields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aa87e0aa8f138ccd811e8844a7bf9eea4</anchor>
      <arglist>(std::vector&lt; vectorType * &gt; &amp;postProcessedSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getPostProcessedFields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aed13062f158cf04fae4a53b967f073c6</anchor>
      <arglist>(const dealii::MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>markBoundaries</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ac00dbfed1b570cdd2c1f88aa1be13376</anchor>
      <arglist>(parallel::distributed::Triangulation&lt; dim &gt; &amp;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a90568dce4dabb9258e735f55b7a8722b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyNeumannBCs</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a247247ad46d4df30ac4fbc99cc202952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPeriodicity</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ae1adb942478d805314e9d831738b4396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPeriodicityConstraints</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a7b3618cecf4fbc94cd1a69aca33c7c49</anchor>
      <arglist>(ConstraintMatrix *, const DoFHandler&lt; dim &gt; *) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getComponentsWithRigidBodyModes</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ac2b182539b16bbc6b617b4af89a90323</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRigidBodyModeConstraints</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a7351c4781287e60646e237594558fb42</anchor>
      <arglist>(const std::vector&lt; int &gt;, ConstraintMatrix *, const DoFHandler&lt; dim &gt; *) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyInitialConditions</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a64fbd7dc135ad44c1dd45f57c5e24510</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>save_checkpoint</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a476d442f58f3dc530386344022597f0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load_checkpoint_triangulation</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>acbef7812bd7bd638e7f54eced541943e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load_checkpoint_fields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a7ec1999aba985f61d22067b700baa99e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load_checkpoint_time_info</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>afc6502102426f8ff6eed02aa0961800a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>move_file</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a2499e8c6f264dae75dce80ed53551ea1</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>verify_checkpoint_file_exists</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af5917d6cc12c26d2903ba3feb1df2ffd</anchor>
      <arglist>(const std::string filename)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateNucleiList</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a4780db6679b6ca1978c4ceda3264d422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; nucleus&lt; dim &gt; &gt;</type>
      <name>getNewNuclei</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>acfe40adc0db850abeed80ab89360992a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getLocalNucleiList</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a149f1ae203f514ea0840861fc163cbd1</anchor>
      <arglist>(std::vector&lt; nucleus&lt; dim &gt; &gt; &amp;newnuclei) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>safetyCheckNewNuclei</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a800cec408070da6380cac78e75ecd822</anchor>
      <arglist>(std::vector&lt; nucleus&lt; dim &gt; &gt; newnuclei, std::vector&lt; unsigned int &gt; &amp;conflict_ids)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refineMeshNearNuclei</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a785150d76270c4b9048fe5097c20768a</anchor>
      <arglist>(std::vector&lt; nucleus&lt; dim &gt; &gt; newnuclei)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>weightedDistanceFromNucleusCenter</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>adb4b61b23ba7496eb3e9d41f247c894b</anchor>
      <arglist>(const dealii::Point&lt; dim, double &gt; center, const std::vector&lt; double &gt; semiaxes, const dealii::Point&lt; dim, double &gt; q_point_loc, const unsigned int var_index) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>weightedDistanceFromNucleusCenter</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a63019aa2290fd898557b8db22e96bbfa</anchor>
      <arglist>(const dealii::Point&lt; dim, double &gt; center, const std::vector&lt; double &gt; semiaxes, const dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc, const unsigned int var_index) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>getNucleationProbability</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a596463bba35fe72ea6370acd3e59c58f</anchor>
      <arglist>(variableValueContainer, double, dealii::Point&lt; dim &gt;, unsigned int variable_index) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>getFieldIndex</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a91eac767470e5404cf8036dcddb43dd3</anchor>
      <arglist>(std::string _name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>outputFreeEnergy</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>abac2cb853f6cd1030278df57182c2000</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;freeEnergyValues) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeIntegral</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a0557bad11a8218237259d833346d1b04</anchor>
      <arglist>(double &amp;integratedField, int index, std::vector&lt; vectorType * &gt; postProcessedSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeIntegralMF</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a3592797668adec1f9d2cd862c2794973</anchor>
      <arglist>(double &amp;integratedField, int index, const std::vector&lt; vectorType * &gt; postProcessedSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getIntegralMF</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a536acc7c429acbac1718006fac781037</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>userInputParameters&lt; dim &gt;</type>
      <name>userInputs</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a44af08e86ea6bacc41dacd1add99616e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>totalDOFs</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ae88012fe05a1d6b28699bf6a7fe33821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>variableAttributeLoader</type>
      <name>var_attributes</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a1402bb474e64ea32846ec1dca2181d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt; &gt;</type>
      <name>simplified_grain_representations</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a2fe3854c91f322be9d7e8a670b780b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>parallel::distributed::Triangulation&lt; dim &gt;</type>
      <name>triangulation</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ae7b20f637aa79d90bef2db16d9319065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FESystem&lt; dim &gt; * &gt;</type>
      <name>FESet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aca8b82c562a106e607667fbcabf6ba8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const ConstraintMatrix * &gt;</type>
      <name>constraintsDirichletSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a62bcdfc2c59c8f14bd2f84f85fd39fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const ConstraintMatrix * &gt;</type>
      <name>constraintsOtherSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aca14e17c20e2d5b65e4bd3c5b1256c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const DoFHandler&lt; dim &gt; * &gt;</type>
      <name>dofHandlersSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a973f69c1586b481a8c7e583f73144d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const IndexSet * &gt;</type>
      <name>locally_relevant_dofsSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a4e7577cd5db8bd3bc9bd685d88442f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ConstraintMatrix * &gt;</type>
      <name>constraintsDirichletSet_nonconst</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a06d1fcd4b969877b974e992e395de8e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ConstraintMatrix * &gt;</type>
      <name>constraintsOtherSet_nonconst</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a5ca0f003f84bf1eb042b63e45e7692fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DoFHandler&lt; dim &gt; * &gt;</type>
      <name>dofHandlersSet_nonconst</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a76d51ec993ab728dd3854053ae43e971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; IndexSet * &gt;</type>
      <name>locally_relevant_dofsSet_nonconst</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af699a28e500482bca2216f1a1d745c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vectorType * &gt;</type>
      <name>solutionSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a67277d8562ba8add51127ad56de740e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vectorType * &gt;</type>
      <name>residualSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ac40587c73496a9fe89e1ba9c5bdd1b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; parallel::distributed::SolutionTransfer&lt; dim, vectorType &gt; * &gt;</type>
      <name>soltransSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a2b62acf6fd823666068fbccd1ec7975e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DoFHandler&lt; dim &gt; *</type>
      <name>vector_dofHandler</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a77443cfd920902aa1f1c076d7c6870ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FESystem&lt; dim &gt; *</type>
      <name>vector_fe</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>af2b18fe93c2284ab7819a79ef0869ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MatrixFree&lt; dim, double &gt;</type>
      <name>vector_matrixFreeObject</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aaf3b5e41c4d7b8a0c6cb4233b6f635bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MatrixFree&lt; dim, double &gt;</type>
      <name>matrixFreeObject</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aab1d495720103a33c9f29e9ed29db819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vectorType</type>
      <name>invM</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aacd83299ae4bca66040bb4abd606d64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vectorType</type>
      <name>dU_vector</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a97c3221ab9a3a39cc0bd7c4d9275f88c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vectorType</type>
      <name>dU_scalar</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aa6081073b220a4776e9a53ee5fe67e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>currentFieldIndex</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a6f683b6ccaba2e68e2b31869be990430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>generatingInitialGuess</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a8715cb0955713c67d61930ab34726177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::map&lt; dealii::types::global_dof_index, double &gt; * &gt;</type>
      <name>valuesDirichletSet</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ab9ab33bb9925f1062ac082d1b495f2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; nucleus&lt; dim &gt; &gt;</type>
      <name>nuclei</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a41d57ddc2ac5df6bb9453bdf7a29432e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>freeEnergyValues</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ab548447de8960b216352d8684259919d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isTimeDependentBVP</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ab46559b1aad8baf1a926a2e6addaad88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isEllipticBVP</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a7b55ba1c1854a89ea4c36d6e33622140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>parabolicFieldIndex</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a865006c41fc637fb0260d30299f21a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>ellipticFieldIndex</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a01a6c33c9e17810c90583de68a8d7f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>currentTime</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a272038ad264893a568c808f13d818b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>currentIncrement</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aca786276ce09ff562a6d9db37fc57936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>currentOutput</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>ad5cfe71f859fcb3da6f7a6dbc9ef7827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>currentCheckpoint</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a4cbe484bde9cd6adb72dfbcf8a16a2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>current_grain_reassignment</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aa4c5be83bcfb24a01b2dbeca69c76f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimerOutput</type>
      <name>computing_timer</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>aac33e057e4b59379e5a2806b9f22fec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>integrated_postprocessed_fields</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a78352ba93352172619fc3580fdd678d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>first_integrated_var_output_complete</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a30bec675c00f082804f1fd7aec6f31b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>integrated_var</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a7a4400131a16e5d71b047825bb9f1758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>integral_index</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>a93a43ebc76134b30ef42614140b46de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dealii::Threads::Mutex</type>
      <name>assembler_lock</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>abdeea3478d8f3c0d40d369174eae62e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const unsigned int</type>
      <name>CIJ_tensor_size</name>
      <anchorfile>class_matrix_free_p_d_e.html</anchorfile>
      <anchor>afc0215e3a3217565e6b0d65aeea308ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>modelResidual</name>
    <filename>classmodel_residual.html</filename>
    <templarg>dim</templarg>
    <member kind="variable">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarValueResidual</name>
      <anchorfile>classmodel_residual.html</anchorfile>
      <anchor>ad752de6730f1f05e63563bc4488f32bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalarGradResidual</name>
      <anchorfile>classmodel_residual.html</anchorfile>
      <anchor>a61ec492101c9f6462f8b70d35cd12ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorValueResidual</name>
      <anchorfile>classmodel_residual.html</anchorfile>
      <anchor>afa0d1b980f63e6b85a17e8f2af061bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorGradResidual</name>
      <anchorfile>classmodel_residual.html</anchorfile>
      <anchor>a2c4b1598d8fa7e56a3c89de51116138c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>modelVariable</name>
    <filename>classmodel_variable.html</filename>
    <templarg>dim</templarg>
    <member kind="variable">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarValue</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>aefa59e09eab647161478e54f2fbce8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalarGrad</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>a1783b7b637ff73a769affe223b365e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalarHess</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>a3c56e2129ec2f71b77572180cca25e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorValue</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>af722e1a3bcc4c93099b5828375d4423a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorGrad</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>a74052f74a494bde26c317126f9659fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 3, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorHess</name>
      <anchorfile>classmodel_variable.html</anchorfile>
      <anchor>ac235d5e468974960ad63414f34497edd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NonlinearSolverParameters</name>
    <filename>class_nonlinear_solver_parameters.html</filename>
    <base>SolverParametersBase</base>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterations</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>abada8156b92f8935e89cbf7bd263ded6</anchor>
      <arglist>(unsigned int _max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxIterations</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a009dab8bab3c76f3c4eb7ebaeb6c9f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadParameters</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a8d1a07d590e79ca3384cbd9b22a750e3</anchor>
      <arglist>(unsigned int _var_index, SolverToleranceType _tolerance_type, double _tolerance_value, bool _backtrack_damping_flag, double _backtrack_step_modifier, double _backtrack_residual_decrease_coeff, double _default_dampling_coefficient, bool _laplace_for_initial_guess)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBacktrackDampingFlag</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a8b6a573082cae0b445cce403c9fdff5b</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBacktrackStepModifier</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>aa3bda66ab4e4686c85bd04c37e1b967c</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBacktrackResidualDecreaseCoeff</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a5fb8cdcdcb5a9ca7d1b64c504cf6e75a</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDefaultDampingCoefficient</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a30fd6eaefaf107e1265d57b61accb47d</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLaplaceInitializationFlag</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>aec3dca8188514065def984e3a4e60488</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>max_iterations</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a6d1fb853793cdbd341600473a0168fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>backtrack_damping_flag_list</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>ad4b2e9dcdb2f6f180728d41b00b32181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>backtrack_step_modifier_list</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a616980a660834426fc7efe98be5708fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>backtrack_residual_decrease_coeff_list</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a201cea686ac0f208bd7f7d4898a0f104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>default_damping_coefficient_list</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a86ee4139815451220352e88a059c2f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>laplace_for_initial_guess_list</name>
      <anchorfile>class_nonlinear_solver_parameters.html</anchorfile>
      <anchor>a51062565418129df514647dd951afd8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NonUniformDirichletBC</name>
    <filename>class_non_uniform_dirichlet_b_c.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>NonUniformDirichletBC</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>a158f2dd666f3e057b7b059767d7ceb0e</anchor>
      <arglist>(const unsigned int _index, const unsigned int _direction, const double _time, const userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>a6a1fceabbc7b046cd7c0934159009195</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, const unsigned int component=0) const </arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>index</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>ad50032c86051707cc49a8ded34ea39cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>direction</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>a7eb8a42147cf0ba3ee4265aa9d0655bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>time</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>a97f443479343d27ae6800e77d16ae3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const userInputParameters&lt; dim &gt;</type>
      <name>userInputs</name>
      <anchorfile>class_non_uniform_dirichlet_b_c.html</anchorfile>
      <anchor>a679378dc93ff06d974a1ead4213456cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NonUniformDirichletBCVec</name>
    <filename>class_non_uniform_dirichlet_b_c_vec.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>NonUniformDirichletBCVec</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>a6a75956fac04d90d10775bbd119224e2</anchor>
      <arglist>(const unsigned int _index, const unsigned int _direction, const double _time, const userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_value</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>a848098ab895481f43dba7982883f6e1a</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, dealii::Vector&lt; double &gt; &amp;vector_BC) const </arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>index</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>ad50032c86051707cc49a8ded34ea39cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>direction</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>a7eb8a42147cf0ba3ee4265aa9d0655bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>time</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>a97f443479343d27ae6800e77d16ae3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const userInputParameters&lt; dim &gt;</type>
      <name>userInputs</name>
      <anchorfile>class_non_uniform_dirichlet_b_c_vec.html</anchorfile>
      <anchor>a679378dc93ff06d974a1ead4213456cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nucleationParameters</name>
    <filename>classnucleation_parameters.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>nucleationParameters</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a0bb5c075aca84cc0f02efacd17ee3939</anchor>
      <arglist>(unsigned int _var_index, std::vector&lt; double &gt; _semiaxes, std::vector&lt; double &gt; _freeze_semiaxes, std::vector&lt; double &gt; _ellipsoid_rotation, double _hold_time, double _no_nucleation_border_thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rotation_matrix</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a7d81cb5660274e0d059de6d6968130e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>var_index</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>ab20c112ec6f464fe06a2506620aad98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>semiaxes</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a7e86d72e37fd9b050f0cdad2e4457af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>ellipsoid_rotation</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>ac685a2f2d3b1e3c175ac8d7b7f474843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>freeze_semiaxes</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a60568c5607bb675da93f98a08b6ecc05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>no_nucleation_border_thickness</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a676995609da8d0045884cbfd36da6210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>hold_time</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>a4d6072946082cdd5dcc7171ee729e36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Tensor&lt; 2, dim, double &gt;</type>
      <name>rotation_matrix</name>
      <anchorfile>classnucleation_parameters.html</anchorfile>
      <anchor>aed1e38514861e3aeffacebeb5f2abbf5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nucleus</name>
    <filename>structnucleus.html</filename>
    <templarg>dim</templarg>
    <member kind="variable">
      <type>unsigned int</type>
      <name>index</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a589d64202487f78e3cc30dd2e04c5201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dealii::Point&lt; dim &gt;</type>
      <name>center</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a36b425b084ab9782ed57c3bce13a579d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>radius</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a3f67c53b80389c5f53961936edba04c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>semiaxes</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a7e86d72e37fd9b050f0cdad2e4457af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seededTime</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a27864794ac2deed896666c4c3a52a477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seedingTime</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>ad6efa428796d2d509490a0105ca1b3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>seedingTimestep</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a9c765dfd9bba6e2c88bdbefe225ad104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>orderParameterIndex</name>
      <anchorfile>structnucleus.html</anchorfile>
      <anchor>a795391fbe43042c5f491c8d08d24a88c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrderParameterRemapper</name>
    <filename>class_order_parameter_remapper.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type>void</type>
      <name>remap</name>
      <anchorfile>class_order_parameter_remapper.html</anchorfile>
      <anchor>a2b0a77f197d3207e0b89312047d6c8b4</anchor>
      <arglist>(std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt;&gt; &amp;grain_representations, std::vector&lt; vectorType * &gt; &amp;solution_fields, dealii::DoFHandler&lt; dim &gt; &amp;dof_handler, unsigned int dofs_per_cell, double buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remap_from_index_field</name>
      <anchorfile>class_order_parameter_remapper.html</anchorfile>
      <anchor>a9d576ddab07e31881ed3b61c947188d8</anchor>
      <arglist>(std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt;&gt; &amp;grain_representations, const vectorType *grain_index_field, std::vector&lt; vectorType * &gt; &amp;solution_fields, dealii::DoFHandler&lt; dim &gt; &amp;dof_handler, unsigned int dofs_per_cell, double buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>parallelNucleationList</name>
    <filename>classparallel_nucleation_list.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>parallelNucleationList</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>ae7bfe9e70c49e4dcb2547236e95cf3cc</anchor>
      <arglist>(std::vector&lt; nucleus&lt; dim &gt; &gt; _newnuclei)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nucleus&lt; dim &gt; &gt;</type>
      <name>buildGlobalNucleiList</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>a5377379c41d1fe90b4198e70c01d0b1f</anchor>
      <arglist>(double min_dist_between_nuclei, unsigned int old_num_nuclei)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nucleus&lt; dim &gt; &gt;</type>
      <name>removeSubsetOfNuclei</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>abbd2e2215b5bf8859484cc2dc6112dc7</anchor>
      <arglist>(std::vector&lt; unsigned int &gt; nuclei_to_remove, unsigned int nuclei_size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendUpdate</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>a6b7a91761834754f88a6b472b38584e0</anchor>
      <arglist>(int procno) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveUpdate</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>ad538f2c3b2a68f5cef215801a687a7ff</anchor>
      <arglist>(int procno)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>broadcastUpdate</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>acec0e011e770cfed5b2cf74b2b9ce395</anchor>
      <arglist>(int broadcastProc, int thisProc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resolveNucleationConflicts</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>a2bade43ad9197049f681735d35fbe343</anchor>
      <arglist>(double min_dist_between_nuclei, unsigned int old_num_nuclei)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; nucleus&lt; dim &gt; &gt;</type>
      <name>newnuclei</name>
      <anchorfile>classparallel_nucleation_list.html</anchorfile>
      <anchor>ad343e89b3a978489e45399845838776e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PFunctions::pFunction</name>
    <filename>class_p_functions_1_1p_function.html</filename>
    <member kind="function">
      <type></type>
      <name>pFunction</name>
      <anchorfile>class_p_functions_1_1p_function.html</anchorfile>
      <anchor>a8270ad32daccad5deab9e79b95942535</anchor>
      <arglist>(std::string function_name)</arglist>
    </member>
    <member kind="function">
      <type>scalarvalueType</type>
      <name>val</name>
      <anchorfile>class_p_functions_1_1p_function.html</anchorfile>
      <anchor>a7c411007aba0cfd2fe2bf6b0258f508e</anchor>
      <arglist>(scalarvalueType)</arglist>
    </member>
    <member kind="function">
      <type>scalarvalueType</type>
      <name>grad</name>
      <anchorfile>class_p_functions_1_1p_function.html</anchorfile>
      <anchor>ac338318c19f4b8f31a57492cd66b7361</anchor>
      <arglist>(scalarvalueType, unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>scalarvalueType</type>
      <name>hess</name>
      <anchorfile>class_p_functions_1_1p_function.html</anchorfile>
      <anchor>a929fb192a2a224fd8dd5616c01bfaba3</anchor>
      <arglist>(scalarvalueType, unsigned int, unsigned int)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PRISMS::PFunction&lt; double *, double &gt;</type>
      <name>fun</name>
      <anchorfile>class_p_functions_1_1p_function.html</anchorfile>
      <anchor>a5ebd2fc9546549ec83d7e98b123e5c3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>setRigidBodyModeConstraintsTest</name>
    <filename>classset_rigid_body_mode_constraints_test.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <base>MatrixFreePDE</base>
    <member kind="function">
      <type></type>
      <name>setRigidBodyModeConstraintsTest</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>ae7ace213fbd27666984fcf4f0fe4219a</anchor>
      <arglist>(userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~setRigidBodyModeConstraintsTest</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a7e75f8b925d27ddfad2bb9d7b79541d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>call_setRigidBodyModeConstraints</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a2358458b9b05d647968bee13a616d033</anchor>
      <arglist>(std::vector&lt; int &gt; rigidBodyModeComponents, unsigned int &amp;num_constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBCs</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>aaf994c4b3e37676d95e1c920d896efcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRHS</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a54b3ce066d6b3fa7a6d46c0badbe978b</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualExplicitRHS</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>aa935388e178529a537045320dfbbfd8f</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualNonexplicitRHS</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a3b563aecec910b01e2ae08505b197d02</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualLHS</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a4c5cecf654f57452af3951822493532b</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>energyDensity</name>
      <anchorfile>classset_rigid_body_mode_constraints_test.html</anchorfile>
      <anchor>a3990a9db51f24cd46286bfe595f6f26f</anchor>
      <arglist>(const variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, const dealii::VectorizedArray&lt; double &gt; &amp;JxW_value, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimplifiedGrainManipulator</name>
    <filename>class_simplified_grain_manipulator.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type>void</type>
      <name>reassignGrains</name>
      <anchorfile>class_simplified_grain_manipulator.html</anchorfile>
      <anchor>a88fdcbb96c67000221da739a4a6d6012</anchor>
      <arglist>(std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt;&gt; &amp;grain_representations, double buffer_distance, std::vector&lt; unsigned int &gt; order_parameter_id_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transferGrainIds</name>
      <anchorfile>class_simplified_grain_manipulator.html</anchorfile>
      <anchor>ad9ec31fa119c4b132590c027e173261d</anchor>
      <arglist>(const std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt;&gt; &amp;old_grain_representations, std::vector&lt; SimplifiedGrainRepresentation&lt; dim &gt;&gt; &amp;new_grain_representations) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimplifiedGrainRepresentation</name>
    <filename>class_simplified_grain_representation.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>SimplifiedGrainRepresentation</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a2147fb199736c3bcb62e3f2dc1b59d8c</anchor>
      <arglist>(const GrainSet&lt; dim &gt; &amp;grain_set)</arglist>
    </member>
    <member kind="function">
      <type>dealii::Point&lt; dim &gt;</type>
      <name>getCenter</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a960112c649d9c09bb73ee7284b693fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a04505a6cdb23e1e001a58fc7f714ca1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getGrainId</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>ab7f93e3c6709c0de149def2fd47e37fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGrainId</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a62af32b5873c5243de0f7fd7a2973c66</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getOrderParameterId</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a4c51d1c625dcc7c2ba45633f19ea2cf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrderParameterId</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a140446c8915c68d6af02d6801c0e6bb7</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getOldOrderParameterId</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a0a1f36488ec7bb962f090f8799187c0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistanceToNeighbor</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>aadf6799dfac37f8bcff23be45968fae0</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistanceToNeighbor</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>aca6bb20f3225ab64873be9e115e89f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dealii::Point&lt; dim &gt;</type>
      <name>center</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a36b425b084ab9782ed57c3bce13a579d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>radius</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a3f67c53b80389c5f53961936edba04c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>grain_id</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a7e055b4380e70205ad00557d622c0123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>order_parameter_id</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>abc66de3238e82f7856e6564854620864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>old_order_parameter_id</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a51baa95ad30c1f20a52772c0d3193ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>distance_to_neighbor_sharing_op</name>
      <anchorfile>class_simplified_grain_representation.html</anchorfile>
      <anchor>a72b86e2e98083c709667f514b1fd95d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SolverParametersBase</name>
    <filename>class_solver_parameters_base.html</filename>
    <member kind="function">
      <type>SolverToleranceType</type>
      <name>getToleranceType</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>a1beb572910c48d0bf62f7940297a2a5c</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getToleranceValue</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>a0418211c608a44d6de292026510ecf39</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>getEquationIndex</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>a1136e7b6504c76076b3827b01db70c01</anchor>
      <arglist>(unsigned int global_index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>var_index_list</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>acf2872050d6beba735b22b756410a32e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SolverToleranceType &gt;</type>
      <name>tolerance_type_list</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>a39840c071af42e2675c609b1572ad43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>tolerance_value_list</name>
      <anchorfile>class_solver_parameters_base.html</anchorfile>
      <anchor>a4f9e54b8392678f2c983a893765d449d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>testInvM</name>
    <filename>classtest_inv_m.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <base>MatrixFreePDE</base>
    <member kind="function">
      <type></type>
      <name>testInvM</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a2ea960b58049d57a3d7ce7834e23c60f</anchor>
      <arglist>(userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~testInvM</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>ac81e9ad02db4a5ef485c584057379c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBCs</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>aaf994c4b3e37676d95e1c920d896efcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>invMNorm</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a2ed4a1871f6ceed65bd709f04ca2d245</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRHS</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a54b3ce066d6b3fa7a6d46c0badbe978b</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualExplicitRHS</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>aa935388e178529a537045320dfbbfd8f</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualNonexplicitRHS</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a3b563aecec910b01e2ae08505b197d02</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualLHS</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a4c5cecf654f57452af3951822493532b</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>energyDensity</name>
      <anchorfile>classtest_inv_m.html</anchorfile>
      <anchor>a3990a9db51f24cd46286bfe595f6f26f</anchor>
      <arglist>(const variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, const dealii::VectorizedArray&lt; double &gt; &amp;JxW_value, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>testOutputResults</name>
    <filename>classtest_output_results.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <base>MatrixFreePDE</base>
    <member kind="function">
      <type></type>
      <name>testOutputResults</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>a20a8b6799754ed870ec13d2d9e4c0544</anchor>
      <arglist>(userInputParameters&lt; dim &gt; _userInputs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setBCs</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>aaf994c4b3e37676d95e1c920d896efcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRHS</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>a54b3ce066d6b3fa7a6d46c0badbe978b</anchor>
      <arglist>(const MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; vectorType * &gt; &amp;dst, const std::vector&lt; vectorType * &gt; &amp;src, const std::pair&lt; unsigned int, unsigned int &gt; &amp;cell_range) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualRHS</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>a12929114dcb8406ca369f40a6b921127</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>residualLHS</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>a4c5cecf654f57452af3951822493532b</anchor>
      <arglist>(variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>energyDensity</name>
      <anchorfile>classtest_output_results.html</anchorfile>
      <anchor>a3990a9db51f24cd46286bfe595f6f26f</anchor>
      <arglist>(const variableContainer&lt; dim, degree, dealii::VectorizedArray&lt; double &gt; &gt; &amp;variable_list, const dealii::VectorizedArray&lt; double &gt; &amp;JxW_value, dealii::Point&lt; dim, dealii::VectorizedArray&lt; double &gt; &gt; q_point_loc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>unitTest</name>
    <filename>classunit_test.html</filename>
    <templarg>dim</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type>bool</type>
      <name>test_computeInvM</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a9b5693e865cd814915354a187c54d6d8</anchor>
      <arglist>(int argc, char **argv, userInputParameters&lt; dim &gt;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_outputResults</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a513fe9e86fce58e40ac119de5c634146</anchor>
      <arglist>(int argc, char **argv, userInputParameters&lt; dim &gt; userInputs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_computeStress</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>aafa50981578d66c114db00cbdcb5173e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignCIJSize</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a69ea60499425e198800ef7708ee18f92</anchor>
      <arglist>(dealii::VectorizedArray&lt; double &gt; CIJ[2 *dim-1+dim/3][2 *dim-1+dim/3])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignCIJSize</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a62213e7c2a0295212f542efeeb4404f4</anchor>
      <arglist>(dealii::Table&lt; 2, double &gt; &amp;CIJ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_setRigidBodyModeConstraints</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a95650eb2aeb0db16ecb81887e34ad32f</anchor>
      <arglist>(std::vector&lt; int &gt;, userInputParameters&lt; dim &gt; userInputs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_parse_line</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>ad599afefce466f63b7ae062a0d517415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_get_subsection_entry_list</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>ad5c208971673c0da7d038f4fe9973243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_get_entry_name_ending_list</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a29b023392acebaff2669aa2b603ee59d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_load_BC_list</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a12c8d64e34d5b5fb479bc271bcfe5be8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_setOutputTimeSteps</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a494c1853c3916c3a9518be069a407bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_NonlinearSolverParameters</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a4b6c040392462a53965ecf55eb7ebf30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_LinearSolverParameters</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a3485672172958acc0759cf9aec576dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_EquationDependencyParser_variables_and_residuals_needed</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a0f64fe42250971bbdf37f34907b23441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_EquationDependencyParser_nonlinear</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a64828976f53285e1f4ecee150ff36111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_EquationDependencyParser_postprocessing</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>aefdf6f860055177b0107ff4b2b986ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_FloodFiller</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a010ca897935680f357281cb9bc361e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_SimplifiedGrainRepresentation</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a91e627641fbcfe4182abfd3ce78584da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_SimplifiedGrainManipulator_transferGrainIds</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>a89f52afe8da191e1a60ace441e874448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_SimplifiedGrainManipulator_reassignGrains</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>ae1add910718f3eb0db1f3f728c715752</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_OrderParameterRemapper</name>
      <anchorfile>classunit_test.html</anchorfile>
      <anchor>aa6cb0e3809e19ea61b764378025a07db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>userInputParameters</name>
    <filename>classuser_input_parameters.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>userInputParameters</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a4a120af9fc835e28323db9e07de22131</anchor>
      <arglist>(inputFileReader &amp;input_file_reader, dealii::ParameterHandler &amp;parameter_handler, variableAttributeLoader variable_attributes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_BC_list</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8e7cacd7f8d31dc18704f5d5af460eb2</anchor>
      <arglist>(const std::vector&lt; std::string &gt; list_of_BCs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_model_constant_double</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a97ef3fe9a9708a7665f9d1b97e4a04ea</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_model_constant_int</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a932b792beb1f1d7e053fd432a9ddbcea</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_model_constant_bool</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a84ae8b445f881440cc49f747524f28b5</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 1, dim &gt;</type>
      <name>get_model_constant_rank_1_tensor</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ab72105ec0a54e50940449ee064d1bfb5</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim &gt;</type>
      <name>get_model_constant_rank_2_tensor</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a77585f23a31f641282eea0e1f85db907</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, 2 *dim-1+dim/3 &gt;</type>
      <name>get_model_constant_elasticity_tensor</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ab3b715fcffbad36c7c82f97024f071f2</anchor>
      <arglist>(const std::string constant_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadVariableAttributes</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ae8b17b1b2017d96fa9da701cc8942a47</anchor>
      <arglist>(variableAttributeLoader variable_attributes)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>get_nucleus_semiaxes</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a25f1b30ac5d82af45caaaddfd1beee9a</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>get_nucleus_freeze_semiaxes</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ac40f9f639348277b928dcac4d671caa6</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>get_nucleus_rotation</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8f942efdd9556014bfa0bd751d588161</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_no_nucleation_border_thickness</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>abbce990272803b4516a245046ef1b313</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_nucleus_hold_time</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a0dc11b1edb393ddd962466dfd755329f</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim, double &gt;</type>
      <name>get_nucleus_rotation_matrix</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a676216f6b4aaf4eb9073e0e3349b49cb</anchor>
      <arglist>(unsigned int var_index) const </arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, unsigned int &gt;</type>
      <name>model_constant_name_map</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a1ce6bb70065c97d0abf6756d896fc5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>domain_size</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9148a8928b80dfeb1d12dff6d06e5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>subdivisions</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aefed766ec01e0a5e5787f5cfbb80e36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>refine_factor</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>afa12400a8d2169827a3918eee955c231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>degree</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a94fb130f6b431eca981ab6866faa3e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>h_adaptivity</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9e3d41b99bd20507805d37d94d9cb949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>max_refinement_level</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9af2085fffbca9507b1e3ee182724c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>min_refinement_level</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a1d0e8f55622d4a5b9ed34cd0f748fae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>refine_criterion_fields</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9afb60be82b9bda02cf125497fd26485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>refine_window_max</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a215f3395973adef23a04ffe3d54cdc6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>refine_window_min</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a44c07f00287866eabcc60d8fee31aeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>skip_remeshing_steps</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a401419fea366cf43dfe0cb04b7535736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>skip_print_steps</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9373a17204ca39ec019a1058f4419086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>output_file_type</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a29eacc954875c85c1db299bfb6ec7d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>output_vtu_per_process</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ab9f8888105ebc126becec803ec03ecfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>output_file_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8a6a68d6facb6f661377dfd4ea5b0e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>outputTimeStepList</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a3b5e9a02e069647ed3319524403b6b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dtValue</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aea98dff0e5974c3c2ba3ffe430dd8e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>finalTime</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a0d895639013504f5a7ddb5453fc7e198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>totalIncrements</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ad78b45bc2009082d143223d405ec5cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LinearSolverParameters</type>
      <name>linear_solver_parameters</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6f902f608843d1cdaaf73833020d5aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NonlinearSolverParameters</type>
      <name>nonlinear_solver_parameters</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a0ef58bb56baacdaaec6c258d9dbc3a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>number_of_variables</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9eb2912726e40d3f3f480f2f9db11cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>var_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a77d44a8212929c63efba720ee9078881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>var_type</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6ede91153bb1c766a7135268dd59e775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PDEType &gt;</type>
      <name>var_eq_type</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ac8f9d09f3d9c955945bedc91702092aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>var_nonlinear</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6694949b1702fbffc6b9685bfcfdcdc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_var_explicit_RHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a623f627013ab798e4b467868699044cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_var_nonexplicit_RHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a5751019cd7fbe0cfe0a5d4d23faf958a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varInfoListExplicitRHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8ab18ee88338b5ac82735bb7d09bb172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varInfoListNonexplicitRHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a372eb725b272d2ffef231a7f76c9e3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_var_LHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a0eb42077b757102f9c942565ab8b4129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varInfoListLHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6c867422611074fa3d62895ededc31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varChangeInfoListLHS</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a3865621981041a627f2fbdfdb8113920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>load_ICs</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a82901b60b159db85ba42c44d5a6af651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>load_parallel_file</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8ed71b7104043e4e108a24ff26ee0887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>load_file_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a68951d4f2b7173cd0ce45b8e74b0fdea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>load_field_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a75fb1688ae68e024df301f30b4a98a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>resume_from_checkpoint</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a0d35ddea12954c106dac4b8426f61bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>checkpointTimeStepList</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ae42b902e287ebfa8b451ae342aa5d9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pp_number_of_variables</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ad76a2340fbd0771529e11986b2103e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_integrated_fields</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8cf33ed4a0ddfd5d6cc64ca69ccaea1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>postProcessingRequired</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6a115b13a4a0c60c2a661a277c956196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_calc_integral</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>afa1f1d7f59afd77bd17d4a3131231ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>integrated_field_indices</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a13ae257f35254e03e91b4c6c5f686baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>pp_var_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aff62f1ffdc71a2f38fad12c5c2044289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>pp_var_type</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aa9f8dd5ac0868f75dad3b968c7e2b16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>pp_varInfoList</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a32490023e7fe11171908f48707bbf67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>pp_baseVarInfoList</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>af121899ed4a6608cf1722e393b48ff99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; varBCs&lt; dim &gt; &gt;</type>
      <name>BC_list</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a696a1f455c8f0351da62103276b66e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; boost::variant&lt; double, int, bool, dealii::Tensor&lt; 1, dim &gt;, dealii::Tensor&lt; 2, dim &gt;, dealii::Tensor&lt; 2, 2 *dim-1+dim/3 &gt; &gt; &gt;</type>
      <name>model_constants</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a783ef719f3eae37d53fc5ced8129cade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>nucleation_occurs</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6894a443a000f3804429ca415a1575cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>nucleating_variable_indices</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a8ebe55d96a395760388920d377fef5a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>nucleation_need_value</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>adc27215b3ea51fe959936ff08bb1d242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_distance_between_nuclei</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a4b0a17a60a260cb5dbcd0a2120bbc7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nucleation_order_parameter_cutoff</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>acf7fe1e7d33e07906b4d14644b3439a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>steps_between_nucleation_attempts</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ae6524a1498a4d516ae97e5c42c90d8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>grain_remapping_activated</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a41355c9a4dbefefc011df9de29e59a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>variables_for_remapping</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9613561cfd4226e36c1a8d08f046c655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>skip_grain_reassignment_steps</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a206e50308ac3308b99e042af515ebc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>order_parameter_threshold</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a6b1d5a376aff071f72a4d17f92f3a2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>buffer_between_grains</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a79925e4415f6750490138c4df54909b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>load_grain_structure</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a75cf9c856e846227677f49a09439b355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_radius_for_loading_grains</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a9f9734b3757204cd1a66774e6356d786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>grain_structure_filename</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a979c195439213c88f69a689b940723b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>grain_structure_variable_name</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aa19a3a8fcb7aa73e4e5f8b75653b855d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num_grain_smoothing_cycles</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>ac7da6c1c630f8179486cf9388c8fbc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>setTimeStepList</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aeb6835c1e108f75a7829dec030610cbe</anchor>
      <arglist>(const std::string outputSpacingType, unsigned int numberOfOutputs, const std::vector&lt; unsigned int &gt; &amp;userGivenTimeStepList)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>load_user_constants</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>aaec2c3f746e030cbe59b0c28da900ced</anchor>
      <arglist>(inputFileReader &amp;input_file_reader, dealii::ParameterHandler &amp;parameter_handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>dealii::Tensor&lt; 2, 2 *dim-1+dim/3 &gt;</type>
      <name>get_Cij_tensor</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a334d74867bf4b18cc0128851146c903a</anchor>
      <arglist>(std::vector&lt; double &gt; elastic_constants, const std::string elastic_const_symmetry) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>dealii::Tensor&lt; 2, 2 *dim-1+dim/3 &gt;</type>
      <name>getCIJMatrix</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a34ed5be92388fa997d2206a17690d6a6</anchor>
      <arglist>(const elasticityModel model, const std::vector&lt; double &gt; constants, dealii::ConditionalOStream &amp;pcout) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; nucleationParameters&lt; dim &gt; &gt;</type>
      <name>nucleation_parameters_list</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a62872d72114d908bb0092ce3bc25aabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; unsigned int, unsigned int &gt;</type>
      <name>nucleation_parameters_list_index</name>
      <anchorfile>classuser_input_parameters.html</anchorfile>
      <anchor>a1c429daacaaff05dc0b04419f2e8a776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>varBCs</name>
    <filename>classvar_b_cs.html</filename>
    <templarg>dim</templarg>
    <member kind="variable">
      <type>std::vector&lt; BC_type &gt;</type>
      <name>var_BC_type</name>
      <anchorfile>classvar_b_cs.html</anchorfile>
      <anchor>a3c2d6901a70977c11f13fa82f7f2c86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>var_BC_val</name>
      <anchorfile>classvar_b_cs.html</anchorfile>
      <anchor>a4d89f4b20bed4bd66ef1d9245ef8ab49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>variable_info</name>
    <filename>structvariable__info.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>is_scalar</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>ac5e4abbb8e7b86030cf9255cfa80d049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>scalar_or_vector_index</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>ad72e35479a6c4c806bdb05d239fb566f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>global_var_index</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>a366fdb68d244f4096867511d2e44c0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>need_value</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>a24fd7ccc0ca9d8fb25deccbecc013db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>need_gradient</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>ae80cd7d7c04dcde28be2799e4b9b65ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>need_hessian</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>a4e598e0d5ace518905895d4df95ba5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>value_residual</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>aadfd9984ded13a72982b365694577069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>gradient_residual</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>add59c23ce0c64ffdded09c0ddc9d08af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>var_needed</name>
      <anchorfile>structvariable__info.html</anchorfile>
      <anchor>a092f30877e6981e14bf1a3926e3c047f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>variableAttributeLoader</name>
    <filename>classvariable_attribute_loader.html</filename>
    <member kind="function">
      <type></type>
      <name>variableAttributeLoader</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>af04f90e22eab1d36ce8b6365a66ccf39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadVariableAttributes</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a99a876ff4ff467bdfe6ad9b6e5894ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadPostProcessorVariableAttributes</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ae8e85fe05f924959e14bfff7054ffd3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_variable_name</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aa2663a595f5755a4d54e872def3d557a</anchor>
      <arglist>(unsigned int index, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_variable_type</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a33fcec2802ca3ae2bbd9a550e1f15508</anchor>
      <arglist>(unsigned int index, fieldType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_variable_equation_type</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ae76cef48f59fb44bf36035fc6c9c704b</anchor>
      <arglist>(unsigned int index, PDEType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_need_value_nucleation</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a2483850d034b05dc28a5427cdbafd6d0</anchor>
      <arglist>(unsigned int index, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allowed_to_nucleate</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a2f81749b798aaae2ae8ef3aad7e128b7</anchor>
      <arglist>(unsigned int index, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_output_integral</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a5d4a152808f7ff7765a19c431fbc29a4</anchor>
      <arglist>(unsigned int index, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dependencies_value_residual_term_RHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a74344f514f658ea519e1a0b2d94c5b63</anchor>
      <arglist>(unsigned int index, std::string dependencies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dependencies_gradient_residual_term_RHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a5f7d8dd3f6c9120d923537f6d5784693</anchor>
      <arglist>(unsigned int index, std::string dependencies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dependencies_value_residual_term_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a4a2a7e723c14a3a0d5688198b868c330</anchor>
      <arglist>(unsigned int index, std::string dependencies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dependencies_gradient_residual_term_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a636049afaf0f6bc94089fb408e6ab2fe</anchor>
      <arglist>(unsigned int index, std::string dependencies)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>setting_primary_field_attributes</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aa5a2b2946d75d78351541e87846a8ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_name_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a444beb90487c1ac69e98eff1c7ce11e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, fieldType &gt; &gt;</type>
      <name>var_type_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a596cf36d1ea14e625892dcafbb9f346a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, PDEType &gt; &gt;</type>
      <name>var_eq_type_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aef7d1e9a0398616d9ec0a164c8a6f1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aea01a7389788b0e0aea000381e2bb39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>adae06d74650ebdc68c76d8432ec6c117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_hessian_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a2377c67dc0e40d5e8b211a390504ddcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_residual_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a128598fd6019496ae4f70b8c1b7636f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_residual_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>abe87486ea21d32a74e079cb1baa89dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a87790538db26c9ef9278eeb3ff6df838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a0152f656cfb7914e9b9e9da10fef5e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_hessian_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a7f9bb701466ce1953fceacf778707c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_residual_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aa3fab86da4833365cd57b69915e8493c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_residual_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ac033982d8f9e7890915bdbaf56f03559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_change_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aede44440ed756f6ba34e23786845e9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_change_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a8d1273f0a490fc94fbd728442ecf60a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_hessian_change_list_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ab43c6c9361d0914adebf7ee20085603a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a2bf117825fe3a392a9d5ebe902057fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a3cc390fdeac33a0acbc68fe7f7529c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_hessian_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a1fd5ff6f96120f322a492a8c14b00bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_list_nucleation</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a6c5a8bcdc3b9fc322bf8aeeed2355c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>nucleating_variable_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ae24d37c7c64ec4db06b30345b83c374f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_name_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a188048c60a83eacaee885be04f0856dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, fieldType &gt; &gt;</type>
      <name>var_type_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>abdd8646fc52a8e902062bc1d9f0facc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>output_integral_list</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a54ca351457994f16ce5e3ce4278826ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_value_residual_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a13c8b3511071d45f5c2947ab22bbc366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, bool &gt; &gt;</type>
      <name>need_gradient_residual_list_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a97deea0cde613140c02b59d9fc583bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_value_RHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a45c98ae88f4884548e2c41ad3be4c87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_gradient_RHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ab6664a4b1d75c930786edca0539b6b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_value_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a83974344d7fd664d4c56d87614c99f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_gradient_LHS</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a667a388a44f74a31a8c5189551809853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_value_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a507035ebb0e41de44cfabc0b8fabc717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; unsigned int, std::string &gt; &gt;</type>
      <name>var_eq_dependencies_gradient_PP</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a9719d64b15890757dce2e7f69ca28a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EquationDependencyParser</type>
      <name>equation_dependency_parser</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a3c18ac3669a6f2c9ab5c844f78bf688f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>number_of_variables</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a9eb2912726e40d3f3f480f2f9db11cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>var_name</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a77d44a8212929c63efba720ee9078881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>var_type</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a6ede91153bb1c766a7135268dd59e775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PDEType &gt;</type>
      <name>var_eq_type</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ac8f9d09f3d9c955945bedc91702092aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>var_nonlinear</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a6694949b1702fbffc6b9685bfcfdcdc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>nucleating_variable</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ad300fcae65c3cd90e441bde35c8e5f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>need_value_nucleation</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>a31973d86c225d51f91b0df2a8517bb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pp_number_of_variables</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>ad76a2340fbd0771529e11986b2103e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>pp_var_name</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aff62f1ffdc71a2f38fad12c5c2044289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fieldType &gt;</type>
      <name>pp_var_type</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>aa9f8dd5ac0868f75dad3b968c7e2b16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>pp_calc_integral</name>
      <anchorfile>classvariable_attribute_loader.html</anchorfile>
      <anchor>afa1f1d7f59afd77bd17d4a3131231ac4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>variableContainer</name>
    <filename>classvariable_container.html</filename>
    <templarg>dim</templarg>
    <templarg>degree</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a0af7e68c8d9f5eaef75b5f5060a5350b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::parallel::distributed::Vector&lt; double &gt;</type>
      <name>vectorType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>accab0ce4c9641071419bfea1492d190f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::FEEvaluation&lt; dim, degree, degree+1, 1, double &gt;</type>
      <name>typeScalar</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>aa052a27d286446c6ac73855c6eafb9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::FEEvaluation&lt; dim, degree, degree+1, dim, double &gt;</type>
      <name>typeVector</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ab21b18a243589c5255cd4dad43f192e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::VectorizedArray&lt; double &gt;</type>
      <name>scalarvalueType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ac74a2c5a901e3ca87ec3ae9c01623449</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorvalueType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a67b2dc8754f16b415d85a07e2b2fe856</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 1, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalargradType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a35b1b83d6d194e7417b515cc381ee577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>scalarhessType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a2eee5b91e58f09e00053c196b4e91f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 2, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorgradType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a5c5c0fd24a54a16a15ac9f93b48f5fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dealii::Tensor&lt; 3, dim, dealii::VectorizedArray&lt; double &gt; &gt;</type>
      <name>vectorhessType</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ad8666e06a1a43dedeeb94f2062d82f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>variableContainer</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a77b8d6d1e8671321877e82954a68fcd9</anchor>
      <arglist>(const dealii::MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; variable_info &gt; _varInfoList, std::vector&lt; variable_info &gt; _varChangeInfoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>variableContainer</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a90c86bbe456d064ee2fa1148ece64e82</anchor>
      <arglist>(const dealii::MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; variable_info &gt; _varInfoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>variableContainer</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a280e61dec4713ac7990b9b97285e79ce</anchor>
      <arglist>(const dealii::MatrixFree&lt; dim, double &gt; &amp;data, std::vector&lt; variable_info &gt; _varInfoList, unsigned int fixed_index)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>get_scalar_value</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a584798e95700a759ddd08268c3995a43</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 1, dim, T &gt;</type>
      <name>get_scalar_gradient</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ad623c486c6147a9a8a62203529cdacf9</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim, T &gt;</type>
      <name>get_scalar_hessian</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>abda3ff533aa78a7196ec0b6a4553bdea</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 1, dim, T &gt;</type>
      <name>get_vector_value</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>aae5d5664282d1192dc5f5bd62074f83f</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim, T &gt;</type>
      <name>get_vector_gradient</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>aa0d9fafbd3a675891c12add704e6780d</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 3, dim, T &gt;</type>
      <name>get_vector_hessian</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a7b157055aabdf531aa70e279712c53e4</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>get_change_in_scalar_value</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ae891ca3b3dacd905fbff25478dab600e</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 1, dim, T &gt;</type>
      <name>get_change_in_scalar_gradient</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a2334c6644986854cf64082e055d463b1</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim, T &gt;</type>
      <name>get_change_in_scalar_hessian</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a558ff58e2fcff8f1b6a70422d612490f</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 1, dim, T &gt;</type>
      <name>get_change_in_vector_value</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ab2e425717a38bf02497af5868d54eccd</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 2, dim, T &gt;</type>
      <name>get_change_in_vector_gradient</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a740b44ebe3c44d59b56d2ca26ad3ac31</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>dealii::Tensor&lt; 3, dim, T &gt;</type>
      <name>get_change_in_vector_hessian</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a706d828db19a8011727f6305dfdffd5a</anchor>
      <arglist>(unsigned int global_variable_index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scalar_value_residual_term</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ae2bacd1fda3217a72ecaf93c94855652</anchor>
      <arglist>(unsigned int global_variable_index, T val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scalar_gradient_residual_term</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>acd84985aeedbfe2cb822742730ca0e31</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 1, dim, T &gt; grad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vector_value_residual_term</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a228512517dc354144d2ee97bfa0d1627</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 1, dim, T &gt; val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vector_gradient_residual_term</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ad244ace7b1bfb549dac979fdcd999825</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 2, dim, T &gt; grad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scalar_value_residual_term_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a15b919d4844269efffa1a1ab03daf4b3</anchor>
      <arglist>(unsigned int global_variable_index, T val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scalar_gradient_residual_term_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a1c988fe92152d808b6b33fd24b36bd4b</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 1, dim, T &gt; grad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vector_value_residual_term_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>af52c94cfef777eac5aab3a1455efeb52</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 1, dim, T &gt; val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vector_gradient_residual_term_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a10ce824240f344ad29fe3e5c140b1112</anchor>
      <arglist>(unsigned int global_variable_index, dealii::Tensor&lt; 2, dim, T &gt; grad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit_and_eval</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a887142b7bc913325076937811e586dc6</anchor>
      <arglist>(const std::vector&lt; vectorType * &gt; &amp;src, unsigned int cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit_and_eval_change_in_solution</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a68112d80a50092129d340c9bce24e343</anchor>
      <arglist>(const vectorType &amp;src, unsigned int cell, unsigned int var_being_solved)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit_and_eval_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a458d69462c54bde12d6bfc6c8a2dcb1b</anchor>
      <arglist>(const vectorType &amp;src, const std::vector&lt; vectorType * &gt; solutionSet, unsigned int cell, unsigned int var_being_solved)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a3fd30e2fee5f3ca55ab76e2ba2b40475</anchor>
      <arglist>(unsigned int cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate_and_distribute</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>aa9d853031ce148f125c962571bb18cc3</anchor>
      <arglist>(std::vector&lt; vectorType * &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate_and_distribute_change_in_solution_LHS</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a44c703e6244db3351333e500c886fd57</anchor>
      <arglist>(vectorType &amp;dst, const unsigned int var_being_solved)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_num_q_points</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ab8312bf9cdd070d5959f809c37d4a764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dealii::Point&lt; dim, T &gt;</type>
      <name>get_q_point_location</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>ad40df045334713f23a4137e92d3e2e1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_JxW</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a758db0546942a5b27eb9570d34ea4f45</anchor>
      <arglist>(dealii::AlignedVector&lt; T &gt; &amp;JxW)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>q_point</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a05f887249582bbf4f5483ce8f5992824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>num_var</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a9d35bbc2d0f2be28cf7be56d61b75b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dealii::FEEvaluation&lt; dim, degree, degree+1, 1, double &gt; &gt;</type>
      <name>scalar_vars</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a5d192d57554454e65340bc1d39952212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dealii::FEEvaluation&lt; dim, degree, degree+1, dim, double &gt; &gt;</type>
      <name>vector_vars</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a52d8a2732e2b85bdd3a096c0567b499c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dealii::FEEvaluation&lt; dim, degree, degree+1, 1, double &gt; &gt;</type>
      <name>scalar_change_in_vars</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a3136b8d8cf11f7107feb0cb96cf9836b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dealii::FEEvaluation&lt; dim, degree, degree+1, dim, double &gt; &gt;</type>
      <name>vector_change_in_vars</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>af1b8a529167b13a78cfb067c211f6a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varInfoList</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>a14fa415417839c1d36909edf82d047e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; variable_info &gt;</type>
      <name>varChangeInfoList</name>
      <anchorfile>classvariable_container.html</anchorfile>
      <anchor>af88c570a6c5f6d8bc801dc759fc04772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>variableValueContainer</name>
    <filename>classvariable_value_container.html</filename>
    <member kind="function">
      <type></type>
      <name>variableValueContainer</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>a785e12ae53f068e7f00094b220d2e080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>ad2f8cdd2936eba79c6c24ba8de54a41c</anchor>
      <arglist>(unsigned int global_variable_index, double variable_value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>a7bfba0474f1c4d35b4cb39debc3afc99</anchor>
      <arglist>(unsigned int global_variable_index)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; unsigned int &gt;</type>
      <name>var_index</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>ae600f14d57e4b390cdc3d01401ec1894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>value</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>a6fd686c1e2596ff16365f9098a5ce438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>num_entries</name>
      <anchorfile>classvariable_value_container.html</anchorfile>
      <anchor>a19cd246604f66d7c5ba743b2b478b020</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vectorBCFunction</name>
    <filename>classvector_b_c_function.html</filename>
    <templarg>dim</templarg>
    <member kind="function">
      <type></type>
      <name>vectorBCFunction</name>
      <anchorfile>classvector_b_c_function.html</anchorfile>
      <anchor>a9444ff93e23811b8f8b013b1d547c220</anchor>
      <arglist>(const std::vector&lt; double &gt; BC_values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vector_value</name>
      <anchorfile>classvector_b_c_function.html</anchorfile>
      <anchor>a843918812fef1111f6e8337f7de17f4a</anchor>
      <arglist>(const dealii::Point&lt; dim &gt; &amp;p, dealii::Vector&lt; double &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vector_value_list</name>
      <anchorfile>classvector_b_c_function.html</anchorfile>
      <anchor>a3eeab904ba7be55677e63254007c86f3</anchor>
      <arglist>(const std::vector&lt; dealii::Point&lt; dim &gt; &gt; &amp;points, std::vector&lt; dealii::Vector&lt; double &gt; &gt; &amp;value_list) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::vector&lt; double &gt;</type>
      <name>BC_values</name>
      <anchorfile>classvector_b_c_function.html</anchorfile>
      <anchor>a50007732d3413aa75908f202312f06ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>PFunctions</name>
    <filename>namespace_p_functions.html</filename>
    <class kind="class">PFunctions::pFunction</class>
  </compound>
  <compound kind="page">
    <name>app_files</name>
    <title>The App Files: equations.h, ICs_and_BCs.h, postprocess.h, nucleation.h, customPDE.h, and main.cc</title>
    <filename>app_files</filename>
  </compound>
  <compound kind="page">
    <name>app_structure</name>
    <title>Structure of a PRISMS-PF App</title>
    <filename>app_structure</filename>
  </compound>
  <compound kind="page">
    <name>custom_apps</name>
    <title>Creating Custom PRISMS-PF Apps</title>
    <filename>custom_apps</filename>
  </compound>
  <compound kind="page">
    <name>manual</name>
    <title>PRISMS-PF User Manual</title>
    <filename>manual</filename>
  </compound>
  <compound kind="page">
    <name>input_file</name>
    <title>The Input File: parameters.in</title>
    <filename>input_file</filename>
  </compound>
  <compound kind="page">
    <name>install_prereqs</name>
    <title>Installing CMake and deal.II</title>
    <filename>install_prereqs</filename>
  </compound>
  <compound kind="page">
    <name>install_prismspf</name>
    <title>Installing PRISMS-PF</title>
    <filename>install_prismspf</filename>
  </compound>
  <compound kind="page">
    <name>install_vis</name>
    <title>Installing Visualization Software</title>
    <filename>install_vis</filename>
  </compound>
  <compound kind="page">
    <name>install</name>
    <title>Installation</title>
    <filename>install</filename>
  </compound>
  <compound kind="page">
    <name>running_apps</name>
    <title>Running a PRISMS-PF Example Application</title>
    <filename>running_apps</filename>
  </compound>
  <compound kind="page">
    <name>tests</name>
    <title>Tests</title>
    <filename>tests</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
  </compound>
</tagfile>
